export function modifyMetaForDisplay(props, meta, config) {
    __forInspect.clear();

    for (let [id, value] of Object.entries(meta)) {
        let moduletype = _.get(value, 'moduletype');
        // 只要table, form, search, 其他未知不判断
        if (moduletype !== 'table' && moduletype !== 'form' && moduletype !== 'search') continue;

        // 记录use form table search 方便配置use
        __forInspect.collectUse(moduletype, id);

        let items = _.get(value, 'items') || [];
        let fields = _.get(config, `autoDisplay.${id}`) || [];

        let changeConfig = _.get(config, `changeFields.${id}`) || {};
        {
            // 配置 status ---------------------------------------------------------------------------------
            let status = changeConfig.status;
            if (status) {
                value.status = status;
            }
            // 配置 status ---------------------------------------------------------------------------------
        }

        for (let item of items) {
            {
                // 配置 filed ---------------------------------------------------------------------------------
                let itemCfg = changeConfig[item.attrcode];
                itemCfg = _.isFunction(itemCfg) ? itemCfg(item) : itemCfg;

                Object.assign(item, itemCfg);
                (() => {
                    let customRender = _.get(itemCfg, 'customRender');
                    if (_.isFunction(customRender)) {
                        if (moduletype === $nccConst.spell.table) return;

                        if (moduletype === $nccConst.spell.form) {
                            // form status need edit todo
                        }
                        // search 支持refer自定义
                        if (moduletype === $nccConst.spell.search) {
                        }

                        props.renderItem(moduletype, id, item.attrcode, customRender({}));
                    }
                })()
                // 配置 filed ---------------------------------------------------------------------------------
            }

            // 记录autoDisplay
            __forInspect.collectAutoDisplay(moduletype, id, item);

            if (
                (item.itemtype === 'input' && fields.includes(item.attrcode))
                ||
                (item.itemtype === 'textarea' && fields.includes(item.attrcode))
                ||
                item.itemtype === 'label'
                ||
                item.itemtype === 'refer'
                ||
                item.itemtype === 'select'
                ||
                item.itemtype === 'radio'
                ||
                item.itemtype === 'checkbox'
            ) {
                item.whichKeyToDisplay = 'auto';
            }
        }
    }

    __forInspect.setConfig(config);
    log.black('字段forInspect, config', __forInspect, config);
}













/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/
/*********************************************************************************************************************/





































// dev 随时查看 ----------------------------------------------------------------------------------------------
// dev 随时查看 ----------------------------------------------------------------------------------------------
// dev 随时查看 ----------------------------------------------------------------------------------------------
// dev 随时查看 ----------------------------------------------------------------------------------------------
// dev 随时查看 ----------------------------------------------------------------------------------------------
top.__forInspect = window.__forInspect = {
    use: {
        // 记录use form table search 方便配置use
        // moduletype: []
    },
    fieldsType: {
        // 记录fieldType 方便节点配置不显示字段
        // id: {fieldType: [code#name...]}, //
    },
    config: {},

    // collect
    collectUse(mt, mCode) {
        this.use[mt] = this.use[mt] || [];
        this.use[mt].push(mCode);
    },
    collectAutoDisplay(mt, id, item) {
        let fPath = `${mt}.${id}.${item.itemtype}`;
        let fItems = _.get(this.fieldsType, fPath) || [];
        fItems.push(`${item.attrcode}#${item.label}`);

        _.set(this.fieldsType, fPath, fItems);
    },
    setConfig (config) {
        this.config = config
    },
    clear() {
        this.use = {};
        this.fieldsType = {};
        this.config = {};
    }
};