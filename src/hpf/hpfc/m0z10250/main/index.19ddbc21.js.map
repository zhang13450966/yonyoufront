{"version":3,"file":"hpf/hpfc/m0z10250/main/index.19ddbc21.js","mappings":"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","sources":["webpack://page/webpack/universalModuleDefinition","webpack://page/external umd \"nc-lightapp-front\"","webpack://page/external umd \"uap/common/components/ExcelOutput/index\"","webpack://page/external umd \"uap/common/components/excelImportconfig/index\"","webpack://page/external umd {\"root\":\"React\",\"var\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://page/external umd {\"root\":\"ReactDOM\",\"var\":\"ReactDOM\",\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"amd\":\"react-dom\"}","webpack://page/webpack/bootstrap","webpack://page/webpack/runtime/compat get default export","webpack://page/webpack/runtime/define property getters","webpack://page/webpack/runtime/hasOwnProperty shorthand","webpack://page/webpack/runtime/make namespace object","webpack://page/./src/hpf/hpfc/m0z10250/main/Utils.js","webpack://page/./src/hpf/refer/hpfrefs/HpfEntryConfigGridRef/index.js","webpack://page/./src/hpf/hpfc/m0z10250/main/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"react-dom\"), require(\"nc-lightapp-front\"), require(\"uap/common/components/excelImportconfig/index\"), require(\"uap/common/components/ExcelOutput/index\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"react-dom\", \"nc-lightapp-front\", \"uap/common/components/excelImportconfig/index\", \"uap/common/components/ExcelOutput/index\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hpf/hpfc/m0z10250/main/index\"] = factory(require(\"react\"), require(\"react-dom\"), require(\"nc-lightapp-front\"), require(\"uap/common/components/excelImportconfig/index\"), require(\"uap/common/components/ExcelOutput/index\"));\n\telse\n\t\troot[\"hpf/hpfc/m0z10250/main/index\"] = factory(root[\"React\"], root[\"ReactDOM\"], root[\"nc-lightapp-front\"], root[\"uap/common/components/excelImportconfig/index\"], root[\"uap/common/components/ExcelOutput/index\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__6487__, __WEBPACK_EXTERNAL_MODULE__6189__, __WEBPACK_EXTERNAL_MODULE__5118__, __WEBPACK_EXTERNAL_MODULE__9845__, __WEBPACK_EXTERNAL_MODULE__9682__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__5118__;","module.exports = __WEBPACK_EXTERNAL_MODULE__9682__;","module.exports = __WEBPACK_EXTERNAL_MODULE__9845__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6487__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6189__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","//使用参见《NC Cloud最终用户许可协议》，协议内容详见安装目录\nimport {toast} from 'nc-lightapp-front';\nconst EMPTY_FN = function () {\n};\n/**\n * 对象合并 类似Object.assign();\n * @returns 第一个参数对象\n */\nconst apply  = function(){\n    if(!arguments){\n        throw new ReferenceError(\"该方法执行时至少传递一个参数对象!\");\n    }\n    //参数的长度\n    let length = arguments.length;\n    //长度是1 直接返回\n    if(length == 1){\n        return arguments[0];\n    }\n    //源\n    let target = arguments[0];\n    //从第二个元素开始 到 最后一个组成sources\n    let sources = [...arguments].slice(1);\n    for(let i = 0;i<sources.length;i++){\n        //第i个参数\n        let param = sources[i];\n        Object.keys(param).forEach(key=>{\n            //param原型上有该对象或者属性\n            if(Object.prototype.hasOwnProperty.call(param,key)){\n                target[key] = param[key];\n            }\n        })\n    }\n    return target;\n}\n/**\n * 加载单据模板\n * props：\n * cfg:{必输项\n *    pagecode： 必输项 参数模板的参数\n * },\n * callback(fn): 回调\n */\nconst loadTemplate = function (props, {pagecode,appcode} = cfg) {\n    return new Promise(resolve=>{\n        props.createUIDom(\n            {\n                pagecode,\n                appcode\n            }, \n            (data) => {\n                resolve({...data});\n            }\n        );\n    })\n};\n\n\n/**\n * 加载多语言\n * @param {*} props 必输项\n * @param {*} cfg:{\n *   moduleId: 必输项  【应用编码： 例如 38211902 @attention 这里是应用编码多语文件的名称也要以应用编码命名】\n *   domainName：必输项 【领域编码：例如 uapbd、fi、gl等等】\n * }\n */\nconst loadLang = function (props, {moduleId,domainName} = cfg) {\n    return new Promise((resolve)=>{\n    \t//请求多语\n        props.MultiInit.getMultiLang(\n            {\n                moduleId,\n                domainName, \n                callback: (data, success, inlt) => {\n                    if (!success){\n                        toast({content: '加载语言包失败', color: 'warning'});\n                    }\n                    resolve({lang:data,inlt});\n                }\n            }\n        );\n    })\n};\n\n/**\n * 加载参照  多个参照一块加载\n * @param {*} urls \n *      示例：[\n *             {\n *                url:'uapbd/refer/supplier/SupplierClassTreeRef/index',\n *               name:'uapbd/refer/supplier/SupplierClassTreeRef/index'\n *             },\n *             {\n *               url:'uapbd/refer/supplier/SupplierClassTreeRef/index',\n *               name:'uapbd/refer/supplier/SupplierClassTreeRef/index'\n *             }\n *            ]\n * @returns \n */\nconst loadRefer = function (urls = []) {\n    if(!urls || urls.length == 0){\n        return Promise.resolve(true);\n    }\n    let result = {};\n    //构造\n    let loads = (urls.filter((refObj,index)=>{\n        let {url} = refObj;\n        let jsname = url.includes(\".\")?url.substring(0, url.length - 3):url;\n        if(!window[jsname]){\n            return refObj;\n        }\n    })||[]).map((refObj)=>{\n        return new Promise((resolve,reject)=>{\n            let {url,name} = refObj;\n            let jsname = url.includes(\".\")?url.substring(0, url.length - 3):url;\n            let script = document.createElement('script');\n            let suffix = url.includes(\".\")?'':'.js'\n            script.src = '../../../../' + url+suffix;\n            script.type = 'text/javascript';\n            script.onload = () => {\n                result[name] = window[jsname].default || EMPTY_FN;\n                resolve(result);\n            };\n            script.onerror = () => {\n                result[name] = undefined;\n                reject(result);\n            };\n            document.body.appendChild(script);\n        })\n    });\n    //Promise 请求全部参照\n    return Promise.all(loads);\n    \n}\n/**\n * 请求资源\n * @param {*} config \n *           props,  当前应用对象的props\n *           pagecode,  页面编码\n *           appcode,   应用编码\n *           moduleId,  建议使用应用编码\n *           domainName, 领域编码\n *           referObjs = [], 参照请求路径集合 \n *           callback = EMPTY_FN 回调\n */\nconst loadNCCResource = function (config) {\n    let {\n            props, \n            pagecode, \n            appcode, \n            moduleId, \n            domainName, \n            referObjs = [], \n            callback = EMPTY_FN\n    } = config;\n    //加载参照\n    loadRefer(referObjs)\n    .then(()=>{\n        return Promise.all([\n            //加载模板\n            loadTemplate(props,{pagecode,appcode}),\n            //加载多语\n            loadLang(props,{moduleId,domainName})\n        ]);\n    }).then(res=>{\n        callback({...res[0],...res[1]});\n    })\n};\n\nconst isArray = function(param){\n    return Object.prototype.toString.call(param).slice(8, -1) === 'Array';\n};\n\nconst isString = function(param) {\n    return Object.prototype.toString.call(param).slice(8, -1) === 'String';\n};\nconst isObject = function(param){\n    return Object.prototype.toString.call(param).slice(8, -1) === 'Object';\n};\nconst transferDataWapper = function(datas){\n    (isObject(datas)?[datas]:datas || []).forEach((data)=>{\n        let {head,body,bodys} = data;\n        head['bodys'] = apply({},(bodys || body || {}));\n        data['body'] = apply({},(bodys || body || {}));\n        data['bodys'] = apply({},(bodys || body || {}));\n    })\n    return datas;\n};\n\nconst onTransferItemSelectedWrapper = function( func ){\n    const fetchDataUnWapper = function(datas){\n        ([datas] || []).forEach((data)=>{\n            let {head,body,bodys} = data;\n            data['body'] = apply({},body ||  head['bodys'] || bodys);\n            data['bodys'] = apply({},body || head['bodys'] || bodys);\n        })\n        return datas;\n    };\n    return  function(record, isComplete, curActiveIndex,status){\n        func(fetchDataUnWapper(record), isComplete, curActiveIndex,status);\n    };\n};\nconst onTransferWrapper = function( {props,fetchList}){\n    let {ncTabs} = fetchList;\n    let {tabPanes} = ncTabs;\n    let tables = (tabPanes || []).map(tabPane=>{\n        let {transferTable,headIdName,bodyIdName} = tabPane;\n        let {headTableId,bodyTableId,billType} = transferTable;\n        return {headTableId,bodyTableId,billType,headPkField:headIdName,bodyPkField:bodyIdName};\n    });\n    let data = props.transferTable.getTransferTableSelectedValue();\n    let records = (tables || []).map(table=>{\n        let {headTableId,bodyTableId,billType,headPkField,bodyPkField} = table;\n        let transData = data[headTableId];\n        let records = (transData || []).map(record=>{\n            let pk = record[headPkField] ? record[headPkField].value : record.head[headTableId].rows[0].values[headPkField].value\n            let ts = record[\"ts\"] ? record[\"ts\"].value : record.head[headTableId].rows[0].values[\"ts\"].value\n            let children = (record.body && bodyTableId && bodyTableId.length>0 && record.body[bodyTableId]) ? (record.body[bodyTableId].rows || []).map(row=>{\n                return {pk:row.values[bodyPkField].value,ts:row.values[\"ts\"].value}\n            }):[];\n            return {pk,ts,children};\n        });\n        return {billType,records};\n    });\n    return records;\n};\n//float类型数求和\nconst FloatAdd = function(arg1,arg2){\n    var r1,r2,m,s1 = arg1.toString(),s2 = arg2.toString();\n    try{\n        r1=s1.split(\".\")[1].length;\n    }catch(e){\n        r1=0\n    }\n    try{\n        r2=s2.split(\".\")[1].length;\n    }catch(e){\n        r2=0\n    }\n    m=Math.pow(10,Math.max(r1,r2));\n    return (arg1*m+arg2*m)/m;\n};\n//float类型数乘积\nconst FloatMultiple = function(f1,f2){\n    var m=0,s1=f1.toString(),s2=f2.toString();\n    \n    try{\n        m+=s1.split(\".\")[1].length;\n    }catch(e){\n\n    }\n    try{\n        m+=s2.split(\".\")[1].length;\n    }catch(e){\n\n    }\n    return Number(s1.replace(\".\",\"\"))*Number(s2.replace(\".\",\"\"))/Math.pow(10,m)\n};\nexport const Utils = {\n    loadNCCResource,\n    loadTemplate,\n    loadLang,\n    loadRefer,\n    apply,\n    transferDataWapper,\n    onTransferItemSelectedWrapper,\n    onTransferWrapper,\n    FloatAdd,\n    FloatMultiple\n};\n\n\n\n","import { high } from 'nc-lightapp-front';\n\nconst { Refer } = high;\n\nexport default function (props = {}) {\n    let conf = {\n        multiLang: {\n            domainName: 'hpf',\n            currentLocale: 'zh-CN',\n            moduleId: 'M0Z10103',\n        },\n        isCacheable: false,\n        refType: 'grid',\n        refName: '数据来源系统设置',/* 国际化处理： 参照名*/\n        placeholder: '数据来源系统设置',/* 国际化处理： 参照名*/\n        refCode: 'hpf/refer/hpfrefs/HpfEntryConfigGridRef/index',//不知道是什么意思\n        queryGridUrl: '/nccloud/hpf/entryconfig/GridReferQuery.do',\n        columnConfig: [{ name: ['来源系统编码', '来源系统名称'], code: ['code', 'name'] }],/* 国际化处理： 编码,名称*/\n        isMultiSelectedEnabled: false,\n        isHasDisabledData: false\n    };\n\n    return <Refer {...Object.assign(conf, props)} />;\n}\n","/****************************************************************************************************\n * 源代码介绍：\n * 1. 介绍\n *     此前端代码采用了单页应用写法，即所有功能在一个页面中，所以我们仅有一个前端文件(index.js) 这个前端文件表现节点\n * 的所有功能。大家可能会认为，代码写在了一起是不是很臃肿，代码很多很乱很长，其实不然，写在一起也是综合了各种因素权衡。\n * 主要权衡指标为：开发者前端基础、改写代码习惯和后端转前端的同学，尽量避免this指针，不用理解call调用，能用一种整齐\n * 划一的方式，让大家理解简单，上手方便。当你了解了代码的基本结构后你一定会觉得简单的不可思议。好处你一定会体会到。\n * 非常不建议在节点应用中使用现在的多页面模式方案。\n * \n * 2. 必备知识\n * 2.1 react的运作模式\n *    模型模型驱动视图改变，视图被监听修改模型，再次驱动视图改变。这种单向变化解决了节点所有功能。\n *    模型模型驱动视图改变 -> 可以理解为视图在表现模型，在react中state变化了，会调用render方法重新渲染，即根据新模型重新画视图。\n *    视图被监听修改模型 -> 视图可以添加各种监听事件 (click, mourseMove)等事件处理时修改模型，模型变化驱动了视图重新表现。\n *    \n *        ————————>>——————  \n *        |               |\n *       模型(state)     视图(render)\n *        |               | \n *        --------<<-------\n *        \n * 2.2 平台的高阶组件\n *    平台的高阶组件是 \"props.组件.方法\" 这种调用形式的组件，高阶组件最终底层还是 react 运作模式。\n *    需要掌握高阶组件API，平台的高阶组件会经常用到。\n * \n * 3. 代码的基本结构\n *    代码中最核心3方法，分别是构造方法constructor方法，创建模型方法createState方法，渲染方法render方法。\n *    当然还有其他的定义，比如监听事件处理，按钮状态控制方法，但是当你掌握了这3个最核心的方法，你基本及掌握了整个\n *    页面的运作模式了。其他方法就一目了然了。\n * \n * 3.1 constructor \n *   \tconstructor的作用为构造当前页面对象。主要职责为：\n *   \t\t1) 加载NC资源，如单据模板、按钮定义、修正模板的一些属性。\n *   \t\t2) 调用创建模型方法createState方法，构建页面的结构(核心方法)\n *   \t\t3) 保存和定义节点配置项，如节点编码，应用编码等。\n * \n * 3.2 createState方法，render方法：\n *   createState方法为创建模型方法，了解createState对了解了解页面整体右至关重要的作用的。\n *   createState做了什么？ createState在根据页面的组件布置情况创建对应的结构性的模型，并且模型的结构与页面的结构\n *   保持一致，这样非常方便了理解页面的整体情况，也非常变量的操作模型。\n *   我们举个简单例子[列表卡片]节点：\n *   我们先简单说明下这个节点，这个节点包含了2个部分，一个是列表的部分，一个是卡片的部分，并给他们起名字：列表模式，卡片模式。\n *   显示列表模式时，不显示卡片模式，显示卡片模式时，不显示列表模式。\n *   功能为列表卡片来回切换，列表模式中包含一个查询区、一个列表区，卡片模式中包含一个表单区。\n *   下面我们来构建一个state:\n *    state = {\n *          showmode: 'list',    showmode表示为当前的显示模式，是列表模式，还是卡片模式，他可以有两个值 list,card分表表示\n *          list: {              列表模式的配置，包含查询区配置对象，表格区配置对象\n *             search:{          查询区配置\n *                  area: ''     查询区的区域编码，你在模板中定义的编码是什么它就是什么  \n *                  onSearch: fn 点击查询时候的处理函数\n *             },\n *             table:{           表格区配置\n *                  area: ''     表格区的区域编码，你在模板中定义的编码是什么他就是什么\n *                  onSelect: fn 点击选中时候的处理函数  \n *             }\n *          },\n *          card:{               卡片模式的配置，包含了表单区的配置对象\n *              form:{           表单区\n *                  area:''      表单区的区域编码，你在模板中定义的编码是什么他就是什么\n *                  onBeforeEdit:fn 表单编辑前的处理函数\n *              }\n *          } \n *    }\n *    以上我们就构建一个state,从这个state中，我们可以看到我们页面的模型全貌。\n *    下面我们来看render方法：\n *    render方法的中，主要是渲染组件到页面，我们根据什么来渲染页面，根据上面构建的state模型来渲染。\n *    render = () =>{\n *          var renderList = () =>{ // 渲染列表模式的是的页面\n *          }\n *          var renderCard = () =>{ // 渲染卡片模式的是的页面\n *          }\n *    }\n *    我们应该怎么判断渲染的是列表 还是卡片呢，我们通过state.showmode来确定\n *    根据showmode的当前值的状态来判断是调用 renderList还是renderCard\n *    这样当我们重新设置模型的值(setState)就能够借助React的机制(见react的运作模式)驱动视图变化了(setState会驱动调用render)\n *    所以我们可以这样写：\n *     render = () =>{\n *          var renderList = () =>{ //渲染列表模式的是的页面，\n *          }\n *          var renderCard = () =>{ //渲染卡片模式的是的页面，\n *          }\n *          return this.state.showmode == 'list' ? renderList() : renderCard();\n *    }\n *    是不是非常简单，当我们要在列表和卡片模式中切换时，我们只需要 setState (showmode:'list'或者'card')\n *    就可以在列表和卡片间来回切换了，非常便利，再也不用什么缓存了，而且切换时也不需要加载什么模板，非常快捷。\n *       \n *    那么renderList方法里面是怎么写的呢，也非常简单，我们再看一下state里面list的定义\n *    我们就可以根据list里面的定义写renderList了，state结构和render结构保持了一致\n *          list: {             列表模式的配置，包含查询区配置对象，表格区配置对象\n *             search:{         查询区配置\n *                  area: ''    查询区的区域编码，你在模板中定义的编码是什么他就是什么  \n *                  onSearch:fn 点击查询时候的处理函数\n *             },\n *             table:{          表格区配置\n *                  area: ''    表格区的区域编码，你在模板中定义的编码是什么他就是什么\n *                  onSelect: fn 点击选中时候的处理函数  \n *             }\n *          },\n *    renderList方法内部写法例子\n *           var renderList = () =>{ //渲染列表模式的是的页面，\n *              var {search, table } = this.state.list; //我们解构list里面的两个模型对象，就是search查询区的配置，table表格配置\n *                 return <div>\n *                  {this.props.search.NCCreateSearch(search.area, search)}\n *                   {this.props.table.createSimpleTable(table.area, table)}\n *                </div>\n *          }\n *    这样我们的列表界面就做完了，很简单卡片模式也是和类似\n *    var renderCard = () =>{ // 渲染卡片模式的是的页面，\n *           var { form } = this.card; // 我们解构card里面的两个模型对象，就是search查询区的配置，table表格配置\n *          return <div>\n *                  {this.props.search.form(form.area, form)}\n *          </div>\n *    }\n * \n *    现在我们看一下完整的例子代码，并进行一些总结：\n *    createState = () => {\n *      var state = {\n *          showmode: 'list',   showmode表示为当前的显示模式，是列表模式，还是卡片模式，他可以有两个值list,card分表表示\n *          list: {             列表模式的配置，包含查询区配置对象，表格区配置对象\n *             search:{         查询区配置\n *                  area: ''    查询区的区域编码，你在模板中定义的编码是什么他就是什么  \n *                  onSearch:fn 点击查询时候的处理函数\n *             },\n *             table:{          表格区配置\n *                  area: ''    表格区的区域编码，你在模板中定义的编码是什么他就是什么\n *                  onSelect: fn 点击选中时候的处理函数  \n *             }\n *          },\n *          card:{              卡片模式的配置，包含了表单区的配置对象\n *              form:{          表单区\n *                  area:''     表单区的区域编码，你在模板中定义的编码是什么他就是什么\n *                  onBeforeEdit:fn 表单编辑前的处理函数\n *              }\n *          } \n *      }\n *    }\n *    render = () => {\n *          var renderList = () =>{ \n *              var {search, table } = this.state.list; // 我们解构list里面的两个模型对象，就是search查询区的配置，table表格配置\n *                 return <div>\n *                  {this.props.search.NCCreateSearch(search.area, search)}\n *                  {this.props.table.createSimpleTable(table.area, table)}\n *                </div>\n *          }\n *          var renderCard = () =>{ \n *               var { form } = this.card; // 我们解构card里面的两个模型对象，就是search查询区的配置table表格配置\n *                return <div>\n *                  {this.props.search.form(form.area, form)}\n *                </div>\n *          }\n *          return this.state.showmode == 'list' ? renderList() : renderCard();\n *    }\n *    \n *    总结：\n *      代码state和render渲染的模型结构上是一致，这样我们能很快构建我们的页面，并非常容易修改，\n *      我们只需要修改我们的模型，就可以操控我们的页面了， 渲染只是在表现我们的模型。\n ****************************************************************************************************/\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Utils } from './Utils';\n\n// ============= 导入高阶组件区 ==============\nimport { ajax, base, createPage, high, promptBox, toast, print } from 'nc-lightapp-front';\n// 导入导出相关\nimport excelImportconfig from 'uap/common/components/excelImportconfig';\nimport ExcelOutput from 'uap/common/components/ExcelOutput';\nimport EntryConfigRef from '../../../refer/hpfrefs/HpfEntryConfigGridRef/index';\n// 打印输出相关\nconst { PrintOutput } = high;\n\n\n// ============= 导入基础组件区 ==============\nconst { NCDiv } = base;\n\n\n// ============= 基本变量定义区 ==============\nconst EMPTY_FN = () => { }; // 空函数\nconst EDITMODE_ADD = 'add'; // 新增态\nconst EDITMODE_EDIT = 'edit'; // 编辑态\nconst EDITMODE_BROWSE = 'browse'; // 浏览态\n\n\n// ============= 自定义常量区 ================\nconst FIELDS = { // 实体关键字段编码\n    PRIMARYKEY: 'pk_transway', // 主键\n};\nconst ACTIONS = { // 按钮编码\n    ADD: 'Add', // 新增\n    EDIT: 'Edit', // 修改\n    DELETE: 'Delete', // 删除\n    SAVE: 'Save', // 保存\n    CANCEL: 'Cancel', // 取消\n    REFRESH: 'Refresh', // 刷新\n    IMPORT: 'Import', // 导入\n    EXPORT: 'Export', // 导出\n    PRINT: 'Print', // 打印\n    OUTPUT: 'Output', // 输出\n    DOWN: 'Down', // 下载 add by suqc\n};\nconst URLS = { // 后台请求路径\n    AddUrl: '/nccloud/hpf/transway/AddTransWayVOAction.do', // 新增时请求默认值 Action\n    SaveUrl: '/nccloud/hpf/transway/SaveTransWayVOAction.do', // 保存 Action\n    QueryUrl: '/nccloud/hpf/transway/ListTransWayVOAction.do', // 查询 Action\n    printUrl: '/nccloud/hpf/transway/PrintTransWayVOAction.do', // 打印输出\n    DownUrl: '/nccloud/hpf/transway/DownTranswayAction.do',//下载 add by suqc\n};\n\n\n/**\n * 来源支付渠道档案节点\n * @author 代码生成工具\n * @version NCC2111\n */\nclass ApplicationPage extends Component {\n\n    /**\n     * 构造方法：js要求的必须方法，构造整个页面对象\n     * 此方法构造时，会定义全局配置，this.config,方便其他方法取用\n     * 同时，也处理了加载模板，按钮，设置模板按钮功能，最终通过调用\n     * pageReady(此方法可以加入你的业务逻辑)完成第一次页面数据加载\n     * 此方法中，会调用initButton,initMeta 来初始化模板和按钮\n     * initButton,initMeta,pageReady 仅在页面打开时调用一次\n     * 其他时候不再调用\n     * @param {*} props\n     */\n    constructor(props) {\n        super(props);\n\n        /**\n         * 节点全局变量定义\n         * 包含页面编码、应用编码、标题、模块名等\n         */\n        this.config = {\n            domainName: 'hpf', // 模块域名\n            moduleName: 'hpf', // 模块编码\n            title: props.getSearchParam('n') || '来源支付渠道档案', // 标题\n            appcode: props.getSearchParam('c') || 'appcode未定义', // 应用编码\n            pagecode: props.getSearchParam('p') || 'pagecode未定义', // 页面编码\n        };\n\n        /**\n         * 创建state模型\n         * state中定义的数据模型跟render()方法中的组件一一对应\n         */\n        this.state = this.createState();\n\n        /**\n         * 适配版本变化：2105及其以后版本需要注册组件，之前版本不需要\n         */\n        this.props.use.search('TransWayVO_query');\n        this.props.use.editTable('TransWayVO_table');\n\n        /**\n         * 加载NCC资源\n         * 1.包含单据模板、按钮等平台定义的资源\n         * 2.加载多语资源文件\n         * 3.加载需要在代码总用到参照js\n         */\n        Utils.loadNCCResource({\n            props,\n            ...this.config,\n            moduleId: this.config.appcode, // 多语模块\n            domainName: this.config.domainName, // 多语文件名\n            callback: (data) => {\n                let { context, template, button, lang, refer = {} } = data;\n                //把默认得主组织放在state中 add by suqc\n                if (context.pk_org) {\n                    this.setState({ pk_org: context.pk_org });\n                }\n                let meta = this.initMeta(template); // 修改后的模板\n                let buttons = this.initButton(button); // 修改后的按钮\n\n                Promise.all([\n                    new Promise(resolve => this.props.meta.setMeta(meta, () => resolve(true))), // 设置模板\n                    new Promise(resolve => this.props.button.setButtons(buttons, () => resolve(true))) // 设置按钮\n                ]).then(() => {\n                    this.setState({ isPageReady: true }, () => {\n                        // 导入按钮适配\n                        let { moduleName, appcode, pagecode } = this.config;\n                        let billType = this.state.excelOutput.billType;\n                        let excelimportconfig = excelImportconfig(this.props, moduleName, billType, true, '', { appcode, pagecode }, () => {\n                            this.loadTableData((data) => this.setTableData(data, this.updateBtnStatus)); // 导入后重新加载数据\n                        });\n                        this.props.button.setUploadConfig(ACTIONS.IMPORT, excelimportconfig);\n                        this.updateBtnStatus(); // 更新按钮状态\n                        this.pageReady(); // 页面信息加载完后加载表格数据\n                    });\n                }).catch((e) => {\n                    throw new ReferenceError(e);\n                });\n            }\n        });\n    }\n\n    /**\n     * pageReady方法为页面已经完全设置完毕\n     * 可以做一些初始的功能，比如：查询列表数据\n     */\n    pageReady = () => {\n        // 加载表格数据  -> 将数据设置到表格上  -> 更新按钮状态\n        this.loadTableData((data) => this.setTableData(data, this.updateBtnStatus));\n    };\n\n    /**\n     * 初始化平台定义的单据模板\n     * 触发时机：执行loadNCCResource,加载完模板、多语、等初始化信息之后触发\n     * 功能：对加载完的模板进行个性化调整\n     * 可实现举例功能:\n     * 1.参照表单联动过滤：参见[Demo1]\n     * 2.处理表格操作列：参见[Demo2]\n     * @param {*} meta \n     */\n    initMeta = (meta) => {\n\n        // sagas 开头的字段全部隐藏\n        meta[this.state.table.area].items.filter(item => {\n            if (item.attrcode.startsWith('sagas')) {\n                item.visible = false;\n                item.disabled = true;\n            }\n        });\n\n        /*\n         * Demo[1]参照过滤\n         * 场景描述： 表单上同时有部门、组织两个字段，部门受组织过滤，部门选择时，受到选择的组织进行部门参照过滤。\n         * 达成效果： 组织不选时，部门加载全部；组织选择，部门加载的数据时该组织下的部门。\n         * 写法解释： 见下面代码注释\n         * 代码示例:\n         */\n        // 主组织权限过滤 : 加载的是当前登录人有权限的组织\n        meta[this.state.table.area].items.find(item => {\n            if (item.attrcode == \"pk_org\") {\n                item.queryCondition = () => ({ // 参照过滤条件\n                    AppCode: this.config.appcode,\n                    TreeRefActionExt: 'nccloud.web.refer.sqlbuilder.PrimaryOrgSQLBuilder' // 组织权限过滤自定义SqlBuilder类全名\n                });\n            }\n        });\n\n        //add by suqc\n        meta[this.state.search.area].items.find(item => {\n            if (item.attrcode == \"pk_org\") {\n                item.queryCondition = () => ({ // 参照过滤条件\n                    AppCode: this.config.appcode,\n                    TreeRefActionExt: 'nccloud.web.refer.sqlbuilder.PrimaryOrgSQLBuilder' // 组织权限过滤自定义SqlBuilder类全名\n                });\n            }\n            if (item.attrcode === 'syscode') { //来源系统过滤\n                item.queryCondition = () => ({\n                        pk_org: this.state.pk_org\n                });\n            }\n        });\n\n        /**\n         * Demo[2]处理表格操作列\n         * 场景描述： 高阶组件simpleTable或者cardTable需要追加操作列\n         * 达成效果： simpleTable或者cardTable, 增加操作列，操作列中包含一些定义的按钮\n         * 写法解释： 见代码注释\n         * 代码示例:\n         */\n        let operation_column = { // 表格操作列\n            key: 'opr', // 操作列 key\n            attrcode: 'opr', // 操作列编码\n            label: '操作', // 操作列名称\n            visible: true,\n            fixed: 'right', // 固定到右侧\n            itemtype: 'customer',\n            render: (text, record, index) => {\n                let btns = [ACTIONS.DELETE]; // 行按钮\n                // 渲染操作列按钮\n                return this.props.button.createOprationButton(btns,\n                    {\n                        area: 'table_inner', // 表体行按钮区域编码\n                        buttonLimit: 3,\n                        onButtonClick: (props, id) => this.onButtonClick(props, id, record, index) // 表体行按钮点击事件\n                    }\n                );\n            }\n        };\n        let tableid = this.state.table.area;\n        //meta[tableid].items.push(operation_column); // 操作列添加到表格中\n        return meta;\n    };\n\n    /**\n     * 初始化平台定义的按钮\n     * 功能：对加载完的按钮进行个性化调整\n     * @param button\n     */\n    initButton = (button) => {\n        // 表头common区注册的按钮复制一份并修改区域编码，当作表体行按钮用。应用注册不用再注册一份。\n        let tableBtns = JSON.parse(JSON.stringify(button.filter(btn => btn.area == 'common')));\n        tableBtns.forEach(btn => btn.area = 'table_inner');\n        return [...button, ...tableBtns];\n    };\n\n    /**\n     * 创建state模型\n     * state的模型结构于页面结构是一致的，请优先阅读开头的说明 3.2 createState方法，render方法\n     * state中得必有并且常用得属性\n     * isPageReady: 页面是否可以进行渲染，构造函数会异步请求模板，所以构造函数执行完成后\n     *              React在构造函数执行完后会立即调用render方法渲染页面，此时可能模板还没有加载完成\n     *              所以通过此属来标记模板等初始化数据是否加载完成。加载完成后 isPageReady=true\n     *              才开始正式得渲染页面，参考render方法这种对isPageReady的使用。\n     * showmode：   页面当前的显示模型，SHOWMODE为前缀的常量定义，你的应用有几个页面的，就有几个SHOWMODE的常量定义\n     *              分别对应不同页面，比如：主从页面中(不带插件) 有列表和卡片两个页面，则会使用到SHOWMODE_LIST\n     *              SHOWMODE_CARD, render方法的中根据showmode值，来具体渲染页面。\n     * editmode:    页面当前编辑模式，有两种状态，EDITMODE为前传的常量定义EDITMODE_BROWSE,EDITMODE_EDIT;\n     *              高阶组件的中的编辑状态与它保持一致的。当设置或改变editmode时高阶组件的状态也要随之变化如 form formlist\n     * 模型结构定义说明：建议优先阅读开头的说明3.2 createState方法，render方法\n     */\n    createState = () => {\n        let state = {\n            //add by suqc\n            pk_org: '',\n            dbinfo: {},\n\n            isPageReady: false, // 页面信息（模板、按钮）是否加载完\n            editmode: EDITMODE_BROWSE, // 页面状态，默认浏览态\n\n            head: { // 表头区域\n                initShowBackBtn: false, // 是否显示返回按钮\n                title: this.config.title, // 单据标题\n            },\n            headBtn: { // 表头按钮区域\n                area: 'common', // 按钮区域编码\n                buttonLimit: 3,\n                onButtonClick: this.onButtonClick // 按钮点击事件\n            },\n            search: { // 查询区\n                area: 'TransWayVO_query', // 查询区域编码\n                showSearchBtn: false,\n                showClearBtn: false,\n                showAdvBtn: false,\n                showAdvSearchPlanBtn: false, //add by suqc\n                onAfterEvent: this.onSearchAfterEvent\n                // clickSearchBtn: () => { // 查询按钮事件\n                //     this.loadTableData((data) => { // 加载表格数据\n                //         this.setTableData(data, this.updateBtnStatus); // 设置表格数据并更新按钮状态\n\n                //         let tableid = this.state.table.area;\n                //         let length = data && data[tableid] && data[tableid].rows && data[tableid].rows.length || 0; // 查到单据个数\n                //         toast({ // 点击查询按钮提示语\n                //             color: length > 0 ? 'success' : 'warning',\n                //             content: length > 0 ? ('查询成功，共' + length + '条') : '未查询到符合条件的数据'\n                //         });\n                //     });\n                // }\n            },\n            table: { // 表格区域\n                area: 'TransWayVO_table', // 表格区域编码\n                useFixedHeader: true,\n                adaptionHeight: true, // 自动托底\n                showIndex: true, // 显示序号\n                showCheck: true, // 显示复选框\n                showPagination: true, // 显示分页器\n                onSelected: this.onSelected, // 选中行事件\n                onSelectedAll: this.onSelectedAll, // 选中所有行事件\n                onBeforeEvent: this.onBeforeEvent, // 编辑前事件\n                onAfterEvent: this.onAfterEvent, // 编辑后事件\n                handlePageInfoChange: () => { // 页器操作的回调函数\n                    // 加载表格数据  -> 将数据设置到表格上  -> 更新按钮状态\n                    this.loadTableData((data) => this.setTableData(data, this.updateBtnStatus));\n                }\n            }\n        };\n        // 打印输出相关\n        Utils.apply(state, {\n            printOutput: {\n                ref: 'printOutput',\n                url: URLS.printUrl,\n                data: {\n                    funcode: this.config.appcode, // 应用编码\n                    oids: [],\n                    nodekey: 'M0Z1025001', // 输出模板设置中的应用标识\n                    outputType: 'output'\n                }\n            }\n        });\n        // 导入导出相关\n        Utils.apply(state, {\n            excelOutput: {\n                moduleName: this.config.moduleName, // 模块编码\n                billType: 'TRANSWAYVO_M0Z10250', // Excel导入导出XML文件名\n                selectedPKS: [], // 导出单据的主键\n                appcode: this.config.appcode, // 应用编码\n                pagecode: this.config.pagecode, // 页面编码\n            }\n        });\n\n        return state;\n    };\n\n    /** 渲染方法 */\n    render() {\n\n        if (!this.state.isPageReady) {\n            return ''; // 页面信息未加载完不渲染页面\n        }\n\n        /** 渲染单表应用页面 */\n        let renderList = () => {\n            let { showmode, editmode, head, headBtn, search, table } = this.state;\n            return (\n                <div className=\"nc-single-table\">\n                    <NCDiv className=\"nc-singleTable-header-area\" areaCode={NCDiv.config.HEADER}>\n                        {/* 表格头部 */}\n                        <div className=\"header-title-search-area\">\n                            {this.props.BillHeadInfo.createBillHeadInfo({ ...head })}\n                        </div>\n                        {/* 按钮区 */}\n                        <div className=\"header-button-area\">\n                            {this.props.button.createButtonApp({ ...headBtn })}\n                        </div>\n                    </NCDiv>\n\n                    {/* 查询区 (浏览态显示)*/}\n                    {editmode == EDITMODE_BROWSE && <div className=\"nc-singleTable-search-area\">\n                        {this.props.search.NCCreateSearch(search.area, { ...search })}\n                    </div>}\n\n                    <div className='nc-singleTable-table-area'> {/* 列表区 */}\n                        {this.props.editTable.createEditTable(table.area, { ...table })}\n                    </div>\n                </div>\n            );\n        };\n\n        /** 渲染打印输出组件 */\n        let renderPrintOutput = () => {\n            let { printOutput } = this.state;\n            return (\n                <div>\n                    <PrintOutput {...printOutput} /> {/* 打印输出 */}\n                </div>\n            );\n        };\n\n        /** 渲染Excel导出导出组件 */\n        let renderExcelOutput = () => {\n            let { excelOutput } = this.state;\n            return (\n                <div>\n                    <ExcelOutput {...Object.assign(this.props)} {...excelOutput} /> {/* Excel 导入导出 */}\n                </div>\n            );\n        };\n\n        return (\n            <div>\n                {renderList()}\n                {renderPrintOutput()}\n                {renderExcelOutput()}\n                {this.props.modal.createModal('selds', {\n                    title: '选择来源系统',\n                    className: 'selds',\n                    content:\n                        <div>\n                            <EntryConfigRef value={this.state.dbinfo} isMultiSelectedEnabled={false}\n                                queryCondition={v => ({\n                                    pk_org: this.state.pk_org\n                                })}\n                                onChange={(v) => {\n                                    this.setState({\n                                        dbinfo: v,\n                                    });\n                                }}\n                            />\n                        </div>,                    \n                    beSureBtnClick: this.beSureBtnClick,\n                    cancelBtnClick: this.cancelBtnClick,\n                    size: 'sm'\n                })\n                }\n            </div>\n        );\n    }\n\n    //add by suqc\n    beSureBtnClick = () => {\n        let { dbinfo, search, table } = this.state;\n        if (dbinfo == null || Object.keys(dbinfo).length == 0) {\n            toast({ color: 'warning', title: \"来源系统不能为空!\" });/* 国际化处理： 下载成功*/\n            return;\n        }\n        ajax({\n            url: URLS.DownUrl,\n            data: {\n                ref1: dbinfo,\n            },\n            async: false,\n            success: (res) => {\n                let { success, data } = res;\n                //填充数据\n                if (success) {\n                    toast({ color: 'success', title: data });/* 国际化处理： 下载成功*/\n                } else {\n                    toast({ color: 'success', title: \"下载失败\" });\n                }\n                this.props.modal.close('selds');\n            }\n        });\n        this.loadTableData((data) => this.setTableData(data, this.updateBtnStatus)); // 重新加载数据\n    };\n    //add by suqc\n    cancelBtnClick = () => {\n        this.setState({ pk_entryconfig: '' });\n    };\n    // ============= 功能性方法区 =============\n    // 职责单一的方法写在这里。多个功能方法可以组装成流程方法，实现某种业务操作。\n    // 如：流程方法【查询表格数据】由【加载表格数据】【填充表格数据】等两个职责单一的方法组装而成。\n    // 职责单一的目的：1.更好的复用代码。 2.避免改 BUG 修改代码影响其他业务逻辑，改出其他的 BUG。\n\n    /**\n     * 设置页面状态\n     * 1. state 中维护当前页面状态  2.设置表格状态\n     */\n    setPageStatus = (editmode = EDITMODE_BROWSE, callback = EMPTY_FN) => {\n        let tableid = this.state.table.area;\n        this.setState({ editmode }, () => this.props.editTable.setStatus(tableid, editmode, callback));\n    };\n\n    /**\n     * 按钮状态控制\n     */\n    updateBtnStatus = () => {\n\n        let isEdit = this.state.editmode == EDITMODE_EDIT; // 编辑态\n        let isBrowse = this.state.editmode == EDITMODE_BROWSE; // 浏览态\n\n        // 按钮显隐性控制  add by suqc\n        this.props.button.setButtonsVisible({\n            [ACTIONS.ADD]: false,\n            [ACTIONS.DELETE]: false,\n            [ACTIONS.EDIT]: false,\n            [ACTIONS.SAVE]: false,\n            [ACTIONS.CANCEL]: false,\n            [ACTIONS.REFRESH]: true,\n            [ACTIONS.IMPORT]: false,\n            [ACTIONS.EXPORT]: false,\n            [ACTIONS.PRINT]: false,\n            [ACTIONS.OUTPUT]: false,\n            [ACTIONS.DOWN]: true,\n        });\n\n        let tableid = this.state.table.area;\n        let selectedRows = this.props.editTable.getCheckedRows(tableid);\n        let selectedCount = selectedRows ? selectedRows.length : 0; // 选中单据个数\n\n        // 按钮禁用控制\n        // this.props.button.setDisabled({\n        // \t[ACTIONS.DELETE]: selectedCount == 0,\n        //     [ACTIONS.PRINT]: selectedCount == 0,\n        //     [ACTIONS.OUTPUT]: selectedCount == 0,\n        // });\n\n        // 主按钮设置\n        // this.props.button.setMainButton(ACTIONS.ADD, isBrowse);\n        // this.props.button.setMainButton(ACTIONS.SAVE, isEdit);\n        this.props.button.setMainButton(ACTIONS.DOWN, true);\n\n        // 表格行内按钮提示语设置\n        // let content = isBrowse ? '确定要删除？' : '';\n        // this.props.button.setPopContent(ACTIONS.DELETE, content);\n    };\n\n    /**\n     * 加载表格数据\n     * @param callback 回调函数\n     */\n    loadTableData = (callback = EMPTY_FN) => {\n        let { search, table } = this.state;\n        let queryInfo = this.props.search.getQueryInfo(search.area, false); // 查询条件    \n        let pageInfo = this.props.editTable.getTablePageInfo(table.area); // 页面分页信息\n        if (!queryInfo.querycondition || queryInfo.querycondition.conditions.length == 0) {\n            callback(undefined);\n            return;\n        }\n        ajax({\n            url: URLS.QueryUrl,\n            data: {\n                appcode: this.config.appcode,\n                pageCode: this.props.pagecode,\n                formId: table.area,\n                queryTreeFormatVO: { ...queryInfo, pageCode: this.config.pagecode },\n                pageInfo\n            },\n            success: res => callback(res.data && res.data.data || undefined)\n        });\n    };\n\n    // 搜索框编辑后之间 add by suqc\n    onSearchAfterEvent = (field, val) => {\n        let { search, table } = this.state;\n        let data = this.props.search.getAllSearchData(search.area);\n        if (data && data.conditions.length != 0) {\n            let pk_org = this.props.search.getSearchValByField(search.area, 'pk_org');\n            if (pk_org && pk_org.value && pk_org.value.firstvalue) {\n                let value = pk_org.value.firstvalue;\n                this.setState({ dbinfo: {}, pk_org: value });\n            }\n            this.loadTableData((data) => this.setTableData(data, this.updateBtnStatus)); // 重新加载数据\n        } else {\n            this.setState({ pk_org: '' });\n            this.props.editTable.setTableData(table.area, { rows: [] }, false);\n        }\n    };\n    /**\n     * 设置表格数据\n     * @param data 表格数据\n     * @param callback 回调函数\n     */\n    setTableData = (data, callback = EMPTY_FN) => {\n\n        let tableid = this.state.table.area;\n        let tableData = (data && data[tableid]) ? data[tableid] : { rows: [] }; // 表格数据\n\n        // 只有在显示第一页的时候设置pageInfo，翻页到其他页面时只更新表格行数据，不再更新pageInfo\n        let pageIndex = tableData.pageInfo && tableData.pageInfo.pageIndex;\n        tableData = pageIndex == 0 ? tableData : { rows: tableData.rows };\n\n        this.props.editTable.setTableData(tableid, tableData); // 设置表格数据\n\n        callback(); // 执行回调函数\n    };\n\n    /**\n     * 加载新增行默认值\n     * @param callback 回调函数\n     */\n    loadAddLineDefaultValue = (callback = EMPTY_FN) => {\n        let tableid = this.state.table.area;\n        let data = { // 获取新增行默认值请求参数\n            formId: this.state.table.area,\n            pageCode: this.config.pagecode,\n            // 工具生成的代码，所有节点保存参数统一按照一主多子的结构处理。单表的数据也要封装成一主多子的结构。\n            billCard: {\n                pageid: this.config.pagecode,\n                bodys: { [tableid]: { areaType: \"table\", areacode: tableid, pageinfo: null, rows: [{ values: {} }] } }\n            }\n        };\n        ajax({ // 请求后台获取默认值\n            url: URLS.AddUrl,\n            data,\n            success: res => callback(res.data && res.data.data || undefined)\n        });\n    };\n\n\n    // =============操作流程方法区=============\n    /**\n     * 按钮事件\n     * @param props 当前组件props\n     * @param btncode 当前点击按钮编码\n     * @param record 当前行数据（如果点击的是表格行按钮）\n     * @param index 当前行下标（如果点击的是表格行按钮）\n     */\n    onButtonClick = (props, btncode, record, index) => {\n        switch (btncode) {\n            case ACTIONS.ADD: // 新增\n                this.onAdd();\n                break;\n            case ACTIONS.EDIT: // 编辑\n                this.onEdit();\n                break;\n            case ACTIONS.DELETE: // 删除\n                record ? this.onRowDelete(record, index) : this.onDelete();\n                break;\n            case ACTIONS.SAVE: // 保存\n                this.onSave();\n                break;\n            case ACTIONS.CANCEL: // 取消\n                this.onCancel();\n                break;\n            case ACTIONS.REFRESH: // 刷新\n                this.onRefresh();\n                break;\n            case ACTIONS.PRINT: // 附件\n                this.onPrint();\n                break;\n            case ACTIONS.OUTPUT: // 输出\n                this.onOutPut();\n                break;\n            case ACTIONS.IMPORT: // 导入\n                break;\n            case ACTIONS.EXPORT: // 导出\n                this.onExport();\n                break;\n            case ACTIONS.DOWN: // 下载 add by suqc\n                this.onDown();\n                break;\n            default:\n                break;\n        }\n    };\n\n    /**\n     * 新增按钮点击事件\n     */\n    onAdd = () => {\n        this.loadAddLineDefaultValue((data) => { // 加载新增行默认值，传到回调函数的参数data中\n\n            this.setPageStatus(EDITMODE_EDIT, () => { // 设置页面状态\n                let tableid = this.state.table.area;\n                let num = this.props.editTable.getNumberOfRows(tableid); // 表格当前行数\n\n                // 后台返回的默认值\n                let rowValues = data.head[tableid].rows.length > 0 && data.head[tableid].rows[0].values || {};\n                // 过滤掉空属性\n                let defaultValue = {};\n                Object.getOwnPropertyNames(rowValues).forEach(attr => {\n                    rowValues[attr].value && (defaultValue[attr] = rowValues[attr]);\n                });\n                this.props.editTable.addRow(tableid, num, true, defaultValue); // 增一行\n\n                this.updateBtnStatus(); // 更新按钮状态\n            });\n        });\n    };\n\n    /**\n     * 修改按钮点击事件\n     * 功能描述：页面状态设置为编辑态，并更新按钮状态\n     */\n    onEdit = () => this.setPageStatus(EDITMODE_EDIT, this.updateBtnStatus);\n\n\n    /**\n     * 删除按钮点击事件\n     */\n    onDelete = () => {\n\n        let tableid = this.state.table.area;\n        let selectedData = this.props.editTable.getCheckedRows(tableid); // 选中数据\n        if (selectedData.length == 0) {\n            return; // 如果没有选中直接返回\n        }\n        // 编辑态-删除：只是从页面上移除数据，保存时再调后台接口去删除\n        if (this.state.editmode == EDITMODE_EDIT) {\n            let indexArray = selectedData.map(d => d.index);\n            this.props.editTable.deleteTableRowsByIndex(tableid, indexArray); // 根据下标index删除表格行\n            this.updateBtnStatus(); // 更新按钮状态\n            return;\n        }\n\n        let rows = selectedData.map((row) => // 封装删除行数据\n        ({\n                rowId: row.data.rowId,\n                status: '3',\n                values: {\n                    ts: { value: row.data.values.ts.value },\n                    [FIELDS.PRIMARYKEY]: { value: row.data.values[FIELDS.PRIMARYKEY].value }\n                }\n        })\n        );\n\n        let data = { // 删除请求提交参数（跟保存一致）\n            formId: tableid,\n            pageCode: this.config.pagecode,\n            // 工具生成的代码，所有节点保存参数统一按照一主多子的结构处理。单表的数据也要封装成一主多子的结构。\n            billCard: {\n                pageid: this.config.pagecode,\n                bodys: { [tableid]: { areaType: \"table\", areacode: tableid, pageinfo: null, rows: rows || [] } }\n            }\n        };\n\n        promptBox({\n            color: 'warning',\n            title: '删除',\n            content: '确定要删除吗？',\n            noFooter: false,\n            noCancelBtn: false,\n            beSureBtnName: '确定',\n            cancelBtnName: '取消',\n            beSureBtnClick: () => { // 确认按钮回调事件\n                this.delete(data, (responseData) => {\n                    toast({ color: 'success', content: '删除成功' });\n                    this.loadTableData((data) => this.setTableData(data, this.updateBtnStatus)); // 重新加载数据\n                });\n            }\n        });\n    };\n\n    /**\n     * 表体行删除\n     * @param record 当前删除行数据\n     * @param index 当前删除行下标\n     */\n    onRowDelete = (record, index) => {\n\n        let tableid = this.state.table.area;\n        if (this.state.editmode == EDITMODE_EDIT) { // 编辑态删除\n            this.props.editTable.deleteTableRowsByIndex(tableid, index); // 根据下标index删除表格行\n            return;\n        }\n\n        let row = { // 删除行数据\n            rowId: index,\n            status: '3',\n            values: {\n                ts: { value: record.values.ts.value },\n                [FIELDS.PRIMARYKEY]: { value: record.values[FIELDS.PRIMARYKEY].value }\n            }\n        };\n\n        let data = { // 删除请求提交参数（跟保存一致）\n            formId: tableid,\n            pageCode: this.config.pagecode,\n            // 工具生成的代码，所有节点保存参数统一按照一主多子的结构处理。单表的数据也要封装成一主多子的结构。\n            billCard: {\n                pageid: this.config.pagecode,\n                bodys: { [tableid]: { areaType: \"table\", areacode: tableid, pageinfo: null, rows: [row] } }\n            }\n        };\n\n        this.delete(data, (responseData) => { // 调用后端接口删除数据\n            toast({ color: 'success', content: '删除成功' }); // 删除提示语\n            this.loadTableData((data) => this.setTableData(data, this.updateBtnStatus)); // 重新加载数据\n        });\n    };\n\n    /**\n     * 删除请求\n     * @param data 删除请求参数\n     * @param callback 回调函数\n     */\n    delete = (data, callback = EMPTY_FN) => {\n        ajax({\n            url: URLS.SaveUrl,\n            data,\n            success: res => callback(res.data && res.data.data || undefined)\n        });\n    };\n\n    /**\n     * 保存按钮点击事件\n     */\n    onSave = () => {\n\n        // 自动过滤空行，根据节点业务确定是否过滤\n        // this.props.editTable.filterEmptyRows(TABLEID,['字段编码1','字段编码1']);\n\n        // 处理有变动的行数据\n        let tableid = this.state.table.area;\n        let changedRows = this.props.editTable.getChangedRows(tableid);\n        if (!changedRows || changedRows.length == 0) {\n            this.setPageStatus(EDITMODE_BROWSE, () => {\n                this.loadTableData((data) => this.setTableData(data, this.updateBtnStatus)); // 重新加载数据\n            });\n            return;\n        }\n\n        // 必输项校验\n        let allRows = this.props.editTable.getAllRows(tableid, true);\n        if (!this.props.editTable.checkRequired(tableid, allRows)) {\n            return;\n        }\n\n        let data = { // 保存请求提交参数\n            formId: tableid,\n            pageCode: this.config.pagecode,\n            // 工具生成的代码，所有节点保存参数统一按照一主多子的结构处理。单表的数据也要封装成一主多子的结构。\n            billCard: {\n                pageid: this.config.pagecode,\n                bodys: { [tableid]: { areaType: \"table\", areacode: tableid, pageinfo: null, rows: allRows || [] } }\n            }\n        };\n\n        let save = () => { // 保存请求\n            ajax({\n                url: URLS.SaveUrl,\n                data,\n                success: (res) => {\n                    toast({ color: 'success', content: '保存成功' });\n                    this.setPageStatus(EDITMODE_BROWSE, () => {\n                        this.loadTableData((data) => this.setTableData(data, this.updateBtnStatus)); // 重新加载数据\n                    });\n                }\n            });\n        };\n\n        // 执行公式并保存\n        this.props.validateToSave(data.billCard.bodys, save, { [tableid]: 'table' }, 'grid');\n    };\n\n    /**\n     * 取消\n     */\n    onCancel = () => {\n        promptBox({ // 取消操作提示框\n            color: 'warning',\n            title: '取消',\n            content: '确定要取消吗？',\n            noFooter: false,\n            noCancelBtn: false,\n            beSureBtnName: '确定',\n            cancelBtnName: '取消',\n            beSureBtnClick: () => {\n                this.setPageStatus(EDITMODE_BROWSE, () => { // 设置页面状态\n                    this.loadTableData((data) => this.setTableData(data, this.updateBtnStatus)); // 重新加载数据\n                });\n            }\n        });\n    };\n\n    /**\n     * 刷新\n     */\n    onRefresh = () => {\n        this.loadTableData((data) => this.setTableData(data, this.updateBtnStatus)); // 重新加载数据\n        toast({ color: 'success', content: '刷新成功' });\n    };\n\n\n    /** 打印 */\n    onPrint = () => {\n        let selectedRows = this.props.editTable.getCheckedRows(this.state.table.area) || []; // 选中行数据\n        // 获取选中数据的pk\n        let pks = selectedRows.length > 0 && selectedRows.map(row => row.data.values[FIELDS.PRIMARYKEY].value); // 单据主键\n        print('pdf', URLS.printUrl, {\n            funcode: this.config.appcode,\n            nodekey: this.state.printOutput.data.nodekey,\n            oids: pks\n        });\n    };\n\n    /** 输出 */\n    onOutPut = () => {\n\n        let selectedRows = this.props.editTable.getCheckedRows(this.state.table.area) || []; // 选中行\n        let pks = selectedRows.map(row => row.data.values[FIELDS.PRIMARYKEY].value); // 单据主键\n        this.state.printOutput.data.oids = pks;\n\n        this.setState(this.state, () => { this.refs.printOutput.open(); });\n    };\n\n    /** 导出 */\n    onExport = () => {\n\n        let selectedRows = this.props.editTable.getCheckedRows(this.state.table.area) || []; // 选中行\n        let pks = selectedRows.map(row => row.data.values[FIELDS.PRIMARYKEY].value); // 导出单据主键\n        this.state.excelOutput.selectedPKS = pks;\n\n        this.setState(this.state, () => this.props.modal.show('exportFileModal')); // 显示Excel导出弹框\n    };\n\n    onDown = () => {\n        this.props.modal.show('selds');\n    };\n\n    /** 选中行事件 */\n    onSelected = () => {\n        this.updateBtnStatus(); // 选中行后重新设置按钮状态\n    };\n\n    /** 选中所有行事件 */\n    onSelectedAll = () => {\n        this.updateBtnStatus(); // 选中所有行后重新设置按钮状态\n    };\n\n    /**\n     * 编辑前事件\n     * @param props\n     * @param moduleId 区域id\n     * @param item 模版当前列的项\n     * @param index 当前行index\n     * @param value 当前值\n     * @param record 行数据\n     */\n    onBeforeEvent = (props, moduleId, item, index, value, record) => \n\n        // 编辑前事件使用案例: 参照过滤。如：交易类型要根据单据类型编码过滤\n        // if (item.attrcode == FIELDS.TRANSTYPEPK) { // 交易类型PK\n        //     let meta = props.meta.getMeta();\n        //     meta[this.state.table.area].items.forEach(item => {\n        //         if (item.attrcode == FIELDS.TRANSTYPEPK) {\n        //             item.queryCondition = () => {\n        //                 return { parentbilltype: this.config.billType }\n        //             }\n        //         }\n        //     });\n        //     this.props.meta.setMeta(meta);\n        //     return true;\n        // }\n        true\n        ;\n\n    /**\n     * 编辑后事件\n     * @param props\n     * @param moduleId 区域id\n     * @param key 操作字段的编码\n     * @param value 当前值\n     * @param changedrows 新旧值集合\n     * @param index 当前行index\n     * @param record 行数据\n     */\n    onAfterEvent = (props, moduleId, key, value, changedrows, index, record) => {\n        switch (key) {\n            // 编辑后事件使用案例\n            case '编辑字段编码':\n                // 业务代码\n                break;\n            default:\n                break;\n        }\n    };\n}\n\nApplicationPage = createPage({\n    initTemplate: {},\n    billinfo: { billtype: 'grid', pagecode: 'M0Z10250_TransWayVO', bodycode: 'TransWayVO_table' },\n    mutiLangCode: 'M0Z10250'\n})(ApplicationPage);\nReactDOM.render(<ApplicationPage />, document.querySelector(\"#app\"));\n"],"names":["toast","EMPTY_FN","apply","arguments","ReferenceError","length","target","sources","slice","i","param","Object","keys","forEach","key","prototype","hasOwnProperty","call","loadTemplate","props","pagecode","appcode","cfg","Promise","resolve","createUIDom","data","loadLang","moduleId","domainName","MultiInit","getMultiLang","callback","success","inlt","content","color","lang","loadRefer","urls","result","loads","filter","refObj","index","url","jsname","includes","substring","window","map","reject","name","script","document","createElement","suffix","src","type","onload","default","onerror","undefined","body","appendChild","all","loadNCCResource","config","referObjs","then","res","isArray","toString","isString","isObject","transferDataWapper","datas","head","bodys","onTransferItemSelectedWrapper","func","fetchDataUnWapper","record","isComplete","curActiveIndex","status","onTransferWrapper","fetchList","ncTabs","tabPanes","tables","tabPane","transferTable","headIdName","bodyIdName","headTableId","bodyTableId","billType","headPkField","bodyPkField","getTransferTableSelectedValue","records","table","transData","pk","value","rows","values","ts","children","row","FloatAdd","arg1","arg2","r1","r2","m","s1","s2","split","e","Math","pow","max","FloatMultiple","f1","f2","Number","replace","Utils","high","Refer","conf","multiLang","currentLocale","isCacheable","refType","refName","placeholder","refCode","queryGridUrl","columnConfig","code","isMultiSelectedEnabled","isHasDisabledData","assign","React","Component","ReactDOM","ajax","base","createPage","promptBox","print","excelImportconfig","ExcelOutput","EntryConfigRef","PrintOutput","NCDiv","EDITMODE_ADD","EDITMODE_EDIT","EDITMODE_BROWSE","FIELDS","PRIMARYKEY","ACTIONS","ADD","EDIT","DELETE","SAVE","CANCEL","REFRESH","IMPORT","EXPORT","PRINT","OUTPUT","DOWN","URLS","AddUrl","SaveUrl","QueryUrl","printUrl","DownUrl","ApplicationPage","render","state","isPageReady","renderList","showmode","editmode","headBtn","search","div","className","areaCode","HEADER","BillHeadInfo","createBillHeadInfo","button","createButtonApp","NCCreateSearch","area","editTable","createEditTable","renderPrintOutput","printOutput","renderExcelOutput","excelOutput","modal","createModal","title","dbinfo","queryCondition","v","pk_org","onChange","setState","beSureBtnClick","cancelBtnClick","size","constructor","pageReady","loadTableData","setTableData","updateBtnStatus","initMeta","meta","items","item","attrcode","startsWith","visible","disabled","find","AppCode","TreeRefActionExt","operation_column","label","fixed","itemtype","text","btns","createOprationButton","buttonLimit","onButtonClick","id","tableid","initButton","tableBtns","JSON","parse","stringify","btn","createState","initShowBackBtn","showSearchBtn","showClearBtn","showAdvBtn","showAdvSearchPlanBtn","onAfterEvent","onSearchAfterEvent","useFixedHeader","adaptionHeight","showIndex","showCheck","showPagination","onSelected","onSelectedAll","onBeforeEvent","handlePageInfoChange","ref","funcode","oids","nodekey","outputType","moduleName","selectedPKS","ref1","async","close","pk_entryconfig","setPageStatus","setStatus","isEdit","isBrowse","setButtonsVisible","selectedRows","getCheckedRows","selectedCount","setMainButton","queryInfo","getQueryInfo","pageInfo","getTablePageInfo","querycondition","conditions","pageCode","formId","queryTreeFormatVO","field","val","getAllSearchData","getSearchValByField","firstvalue","tableData","pageIndex","loadAddLineDefaultValue","billCard","pageid","areaType","areacode","pageinfo","btncode","onAdd","onEdit","onRowDelete","onDelete","onSave","onCancel","onRefresh","onPrint","onOutPut","onExport","onDown","num","getNumberOfRows","rowValues","defaultValue","getOwnPropertyNames","attr","addRow","selectedData","indexArray","d","deleteTableRowsByIndex","rowId","noFooter","noCancelBtn","beSureBtnName","cancelBtnName","delete","responseData","changedRows","getChangedRows","allRows","getAllRows","checkRequired","save","validateToSave","pks","refs","open","show","changedrows","getSearchParam","use","context","template","refer","buttons","setMeta","setButtons","excelimportconfig","setUploadConfig","catch","initTemplate","billinfo","billtype","bodycode","mutiLangCode","querySelector"],"sourceRoot":""}