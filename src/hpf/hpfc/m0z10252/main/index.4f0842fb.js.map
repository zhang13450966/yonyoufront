{"version":3,"file":"hpf/hpfc/m0z10252/main/index.4f0842fb.js","mappings":"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","sources":["webpack://page/webpack/universalModuleDefinition","webpack://page/external umd \"hpf/refer/hpfrefs/HpfEntryConfigGridRef/index\"","webpack://page/external umd \"nc-lightapp-front\"","webpack://page/external umd \"uap/common/components/ApproveDetail/index\"","webpack://page/external umd \"uap/common/components/ExcelOutput/index\"","webpack://page/external umd \"uap/common/components/NCUploader/index\"","webpack://page/external umd \"uap/common/components/approvalTrans/index\"","webpack://page/external umd \"uap/common/components/excelImportconfig/index\"","webpack://page/external umd {\"root\":\"React\",\"var\":\"React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack://page/external umd {\"root\":\"ReactDOM\",\"var\":\"ReactDOM\",\"commonjs\":\"react-dom\",\"commonjs2\":\"react-dom\",\"amd\":\"react-dom\"}","webpack://page/webpack/bootstrap","webpack://page/webpack/runtime/compat get default export","webpack://page/webpack/runtime/define property getters","webpack://page/webpack/runtime/hasOwnProperty shorthand","webpack://page/webpack/runtime/make namespace object","webpack://page/./src/hpf/hpfc/m0z10252/main/Utils.js","webpack://page/./src/hpf/hpfc/m0z10252/main/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"), require(\"react-dom\"), require(\"nc-lightapp-front\"), require(\"uap/common/components/ExcelOutput/index\"), require(\"uap/common/components/excelImportconfig/index\"), require(\"uap/common/components/NCUploader/index\"), require(\"uap/common/components/ApproveDetail/index\"), require(\"uap/common/components/approvalTrans/index\"), require(\"hpf/refer/hpfrefs/HpfEntryConfigGridRef/index\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\", \"react-dom\", \"nc-lightapp-front\", \"uap/common/components/ExcelOutput/index\", \"uap/common/components/excelImportconfig/index\", \"uap/common/components/NCUploader/index\", \"uap/common/components/ApproveDetail/index\", \"uap/common/components/approvalTrans/index\", \"hpf/refer/hpfrefs/HpfEntryConfigGridRef/index\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"hpf/hpfc/m0z10252/main/index\"] = factory(require(\"react\"), require(\"react-dom\"), require(\"nc-lightapp-front\"), require(\"uap/common/components/ExcelOutput/index\"), require(\"uap/common/components/excelImportconfig/index\"), require(\"uap/common/components/NCUploader/index\"), require(\"uap/common/components/ApproveDetail/index\"), require(\"uap/common/components/approvalTrans/index\"), require(\"hpf/refer/hpfrefs/HpfEntryConfigGridRef/index\"));\n\telse\n\t\troot[\"hpf/hpfc/m0z10252/main/index\"] = factory(root[\"React\"], root[\"ReactDOM\"], root[\"nc-lightapp-front\"], root[\"uap/common/components/ExcelOutput/index\"], root[\"uap/common/components/excelImportconfig/index\"], root[\"uap/common/components/NCUploader/index\"], root[\"uap/common/components/ApproveDetail/index\"], root[\"uap/common/components/approvalTrans/index\"], root[\"hpf/refer/hpfrefs/HpfEntryConfigGridRef/index\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__6487__, __WEBPACK_EXTERNAL_MODULE__6189__, __WEBPACK_EXTERNAL_MODULE__5118__, __WEBPACK_EXTERNAL_MODULE__9682__, __WEBPACK_EXTERNAL_MODULE__9845__, __WEBPACK_EXTERNAL_MODULE__1729__, __WEBPACK_EXTERNAL_MODULE__2185__, __WEBPACK_EXTERNAL_MODULE__4808__, __WEBPACK_EXTERNAL_MODULE__3744__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__3744__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5118__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2185__;","module.exports = __WEBPACK_EXTERNAL_MODULE__9682__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1729__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4808__;","module.exports = __WEBPACK_EXTERNAL_MODULE__9845__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6487__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6189__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import {toast} from 'nc-lightapp-front';\nconst EMPTY_FN = function () {\n};\n/**\n * 对象合并 类似Object.assign();\n * @returns 第一个参数对象\n */\nconst apply  = function(){\n    if(!arguments){\n        throw new ReferenceError(\"该方法执行时至少传递一个参数对象!\");\n    }\n    //参数的长度\n    let length = arguments.length;\n    //长度是1 直接返回\n    if(length == 1){\n        return arguments[0];\n    }\n    //源\n    let target = arguments[0];\n    //从第二个元素开始 到 最后一个组成sources\n    let sources = [...arguments].slice(1);\n    for(let i = 0;i<sources.length;i++){\n        //第i个参数\n        let param = sources[i];\n        Object.keys(param).forEach(key=>{\n            //param原型上有该对象或者属性\n            if(Object.prototype.hasOwnProperty.call(param,key)){\n                target[key] = param[key];\n            }\n        })\n    }\n    return target;\n}\n/**\n * 加载单据模板\n * props：\n * cfg:{必输项\n *    pagecode： 必输项 参数模板的参数\n * },\n * callback(fn): 回调\n */\nconst loadTemplate = function (props, {pagecode,appcode} = cfg) {\n    return new Promise(resolve=>{\n        props.createUIDom(\n            {\n                pagecode,\n                appcode\n            }, \n            (data) => {\n                resolve({...data});\n            }\n        );\n    })\n};\n\n\n/**\n * 加载多语言\n * @param {*} props 必输项\n * @param {*} cfg:{\n *   moduleId: 必输项  【应用编码： 例如 38211902 @attention 这里是应用编码多语文件的名称也要以应用编码命名】\n *   domainName：必输项 【领域编码：例如 uapbd、fi、gl等等】\n * }\n */\nconst loadLang = function (props, {moduleId,domainName} = cfg) {\n    return new Promise((resolve)=>{\n    \t//请求多语\n        props.MultiInit.getMultiLang(\n            {\n                moduleId,\n                domainName, \n                callback: (data, success, inlt) => {\n                    if (!success){\n                        toast({content: '加载语言包失败', color: 'warning'});\n                    }\n                    resolve({lang:data,inlt});\n                }\n            }\n        );\n    })\n};\n\n/**\n * 加载参照  多个参照一块加载\n * @param {*} urls \n *      示例：[\n *             {\n *                url:'uapbd/refer/supplier/SupplierClassTreeRef/index',\n *               name:'uapbd/refer/supplier/SupplierClassTreeRef/index'\n *             },\n *             {\n *               url:'uapbd/refer/supplier/SupplierClassTreeRef/index',\n *               name:'uapbd/refer/supplier/SupplierClassTreeRef/index'\n *             }\n *            ]\n * @returns \n */\nconst loadRefer = function (urls = []) {\n    if(!urls || urls.length == 0){\n        return Promise.resolve(true);\n    }\n    let result = {};\n    //构造\n    let loads = (urls.filter((refObj,index)=>{\n        let {url} = refObj;\n        let jsname = url.includes(\".\")?url.substring(0, url.length - 3):url;\n        if(!window[jsname]){\n            return refObj;\n        }\n    })||[]).map((refObj)=>{\n        return new Promise((resolve,reject)=>{\n            let {url,name} = refObj;\n            let jsname = url.includes(\".\")?url.substring(0, url.length - 3):url;\n            let script = document.createElement('script');\n            let suffix = url.includes(\".\")?'':'.js'\n            script.src = '../../../../' + url+suffix;\n            script.type = 'text/javascript';\n            script.onload = () => {\n                result[name] = window[jsname].default || EMPTY_FN;\n                resolve(result);\n            };\n            script.onerror = () => {\n                result[name] = undefined;\n                reject(result);\n            };\n            document.body.appendChild(script);\n        })\n    });\n    //Promise 请求全部参照\n    return Promise.all(loads);\n    \n}\n/**\n * 请求资源\n * @param {*} config \n *           props,  当前应用对象的props\n *           pagecode,  页面编码\n *           appcode,   应用编码\n *           moduleId,  建议使用应用编码\n *           domainName, 领域编码\n *           referObjs = [], 参照请求路径集合 \n *           callback = EMPTY_FN 回调\n */\nconst loadNCCResource = function (config) {\n    let {\n            props, \n            pagecode, \n            appcode, \n            moduleId, \n            domainName, \n            referObjs = [], \n            callback = EMPTY_FN\n    } = config;\n    //加载参照\n    loadRefer(referObjs)\n    .then(()=>{\n        return Promise.all([\n            //加载模板\n            loadTemplate(props,{pagecode,appcode}),\n            //加载多语\n            loadLang(props,{moduleId,domainName})\n        ]);\n    }).then(res=>{\n        callback({...res[0],...res[1]});\n    })\n};\n\nconst isArray = function(param){\n    return Object.prototype.toString.call(param).slice(8, -1) === 'Array';\n};\n\nconst isString = function(param) {\n    return Object.prototype.toString.call(param).slice(8, -1) === 'String';\n};\nconst isObject = function(param){\n    return Object.prototype.toString.call(param).slice(8, -1) === 'Object';\n};\nconst transferDataWapper = function(datas, grandsonMap){\n    (isObject(datas)?[datas]:datas || []).forEach((data)=>{\n        let {head,body,bodys} = data;\n        head['bodys'] = apply({},(bodys || body || {}));\n        data['body'] = apply({},(bodys || body || {}));\n        data['bodys'] = apply({},(bodys || body || {}));\n        grandsonMap && (data['grandsonMap'] = apply({}, grandsonMap));\n    })\n    return datas;\n};\n\nconst onTransferItemSelectedWrapper = function( func ){\n    const fetchDataUnWapper = function(datas){\n        ([datas] || []).forEach((data)=>{\n            let {head,body,bodys} = data;\n            data['body'] = apply({},body ||  head['bodys'] || bodys);\n            data['bodys'] = apply({},body || head['bodys'] || bodys);\n        })\n        return datas;\n    };\n    return  function(record, isComplete, curActiveIndex,status){\n        func(fetchDataUnWapper(record), isComplete, curActiveIndex,status);\n    };\n};\nconst onTransferWrapper = function( {props,fetchList}){\n    let {ncTabs} = fetchList;\n    let {tabPanes} = ncTabs;\n    let tables = (tabPanes || []).map(tabPane=>{\n        let {transferTable,headIdName,bodyIdName} = tabPane;\n        let {headTableId,bodyTableId,billType} = transferTable;\n        return {headTableId,bodyTableId,billType,headPkField:headIdName,bodyPkField:bodyIdName};\n    });\n    let data = props.transferTable.getTransferTableSelectedValue();\n    let records = (tables || []).map(table=>{\n        let {headTableId,bodyTableId,billType,headPkField,bodyPkField} = table;\n        let transData = data[headTableId];\n        let records = (transData || []).map(record=>{\n            let pk = record[headPkField] ? record[headPkField].value : record.head[headTableId].rows[0].values[headPkField].value\n            let ts = record[\"ts\"] ? record[\"ts\"].value : record.head[headTableId].rows[0].values[\"ts\"].value\n            let children = (record.body && bodyTableId && bodyTableId.length>0 && record.body[bodyTableId]) ? (record.body[bodyTableId].rows || []).map(row=>{\n                return {pk:row.values[bodyPkField].value,ts:row.values[\"ts\"].value}\n            }):[];\n            return {pk,ts,children};\n        });\n        return {billType,records};\n    });\n    return records;\n};\n//float类型数求和\nconst FloatAdd = function(arg1,arg2){\n    var r1,r2,m,s1 = arg1.toString(),s2 = arg2.toString();\n    try{\n        r1=s1.split(\".\")[1].length;\n    }catch(e){\n        r1=0\n    }\n    try{\n        r2=s2.split(\".\")[1].length;\n    }catch(e){\n        r2=0\n    }\n    m=Math.pow(10,Math.max(r1,r2));\n    return (arg1*m+arg2*m)/m;\n};\n//float类型数乘积\nconst FloatMultiple = function(f1,f2){\n    var m=0,s1=f1.toString(),s2=f2.toString();\n    \n    try{\n        m+=s1.split(\".\")[1].length;\n    }catch(e){\n\n    }\n    try{\n        m+=s2.split(\".\")[1].length;\n    }catch(e){\n\n    }\n    return Number(s1.replace(\".\",\"\"))*Number(s2.replace(\".\",\"\"))/Math.pow(10,m)\n};\nexport const Utils = {\n    loadNCCResource,\n    loadTemplate,\n    loadLang,\n    loadRefer,\n    apply,\n    transferDataWapper,\n    onTransferItemSelectedWrapper,\n    onTransferWrapper,\n    FloatAdd,\n    FloatMultiple\n};\n\n\n\n","/****************************************************************************************************\n *\n * 代码目录:\n *      目录结尾不带L和P的是当前节点的目录\n *      以L结尾的是单据追溯的目录\n *      以P结尾的是审批详情的目录\n *\n * 源代码介绍：\n * 1,介绍\n *     此前端代码采用了单页应用写法, 即所有功能在一个页面中, 所以我们仅有一个前端文件(index.js) 这个前端文件表现节点\n * 的所有功能。大家可能会认为, 代码写在了一起是不是很臃肿,代码很多很乱很长，其实不然, 写在一起也是综合了各种因素权衡,\n * 主要权衡指标为 开发者前端基础, 改写代码习惯，和后端转前端的同学, 尽量避免this指针, 不用理解call调用, 能用一种整齐\n * 划一的方式，让大家理解简单，上手方便. 当你了解了代码的基本结构后, 你一定会觉得简单的不可思议。\n * 非常不建议在节点应用中使用现在的多页面模式方案。好处你一定会体会到.\n *\n * 2, 必备知识。\n * 2.1)react的运作模式.\n *    模型模型驱动视图改变, 视图被监听修改模型，再次驱动视图改变.  这种单向变化解决了节点所有功能。\n *    模型模型驱动视图改变 -> 可以理解为视图在表现模型,  在react中 state变化了, 会调用render方法重新渲染,即根据新模型\n *    重新画视图.\n *    视图被监听修改模型  -> 视图可以添加各种监听事件，(click, mourseMove)等, 事件处理时, 修改模型. 模型变化驱动了视\n *    图重新表现\n *         —————>>————————\n *        |               |\n *       模型(state)     视图(render)\n *        |               |\n *        -----<<----------\n * 2.2)平台的高阶组件\n *    平台的高阶组件是 props.组件.方法 这种调用形式的组件. 高阶组件最终底层还是 react运作模式.\n *    需要掌握高阶组件API. 平台的高阶组件会经常用到.\n *\n * 3,代码的基本结构,\n *    代码中, 最核心3方法，分别是构造方法constructor方法, 创建模型方法createState方法， 渲染方法render方法， 当然还是其\n * 他的定义，比如监听事件处理, 按钮状态控制方法，但是当你掌握了这3个最核心的方法, 你基本及掌握了整个页面的运作模式，结构模\n * 型了. 在介绍其他方法就一目了然了.\n *\n * 3.1 constructor\n *   constructor的作用为构造当前页面对象。主要职责为\n *   1) 加载NC资源，如单据模板, 按钮定义。 修正模板的一些属性。\n *   2) 调用创建模型方法createState方法，构建页面的结构(*), 核心方法。\n *   3) 保存和定义节点配置项，如节点编码，应用编码等。\n *\n * 3.2 createState方法，render方法\n *   createState方法为创建模型方法，了解createState对了解了解页面整体右至关重要的作用的.\n *   createState做了什么? createState在根据页面的组件布置情况创建对应的结构性的模型.并且\n *   模型的结构与页面的结构保持一致，这样非常方便了理解页面的整体情况，也非常变量的操作模型。\n *   我们举个简单例子[列表卡片]节点：\n *   我们先简单说明下这个节点， 这个节点包含了2个部分， 一个是列表的部分，一个是卡片的部分，\n *   并给他们起名字， 列表模式，卡片模式， 显示列表模式时，不显示卡片模式，显示卡片模式时，不显示列表模式，\n *   功能为列表卡片来回切换，列表模式中， 包含一个查询区， 一个列表区， 卡片模式中， 包含一个表单区。\n *   下面我们来构建一个state\n *    state = {\n *          showmode: 'list',   showmode表示为当前的显示模式， 是列表模式，还是卡片模式， 他可以有两个值 list,card分表表示\n *          list: {             列表模式的配置，包含查询区配置对象，表格区配置对象\n *             search:{         查询区配置\n *                  area: ''    查询区的区域编码,你在模板中定义的编码是什么他就是什么\n *                  onSearch:fn 点击查询时候的处理函数\n *             },\n *             table:{          表格区配置\n *                  area: ''    表格区的区域编码,你在模板中定义的编码是什么他就是什么\n *                  onSelect: fn 点击选中时候的处理函数\n *             }\n *          },\n *          card:{              卡片模式的配置，包含了表单区的配置对象\n *              form:{          表单区\n *                  area:''     表单区的区域编码，你在模板中定义的编码是什么他就是什么\n *                  onBeforeEdit:fn  表单编辑前的处理函数\n *              }\n *          }\n *    }\n *    以上我们就构建一个state,从这个state中，我们可以看到我们页面的模型全貌.\n *    下面我们来看render方法，\n *    render方法的中， 主要是渲染组件到页面，我们根据什么来渲染页面，根据上面构建的state模型来渲染，\n *    render = () =>{\n *          var renderList = () =>{ //渲染列表模式的是的页面，\n *          }\n *          var renderCard = () =>{ //渲染卡片模式的是的页面，\n *          }\n *    }\n *    我们应该怎么判断渲染的是列表 还是卡片呢， 我们通过state.showmode来确定，\n *    根据showmode的当前值的状态来判断是调用 renderList还是renderCard，\n *    这样当我们重新设置模型的值(setState),就能够借助React的机制(见react的运作模式)，驱动视图变化了(setState会驱动调用render)\n *    所以我们可以这样写\n *     render = () =>{\n *          var renderList = () =>{ //渲染列表模式的是的页面，\n *          }\n *          var renderCard = () =>{ //渲染卡片模式的是的页面，\n *          }\n *          return this.state.showmode == 'list' ? renderList() : renderCard();\n *    }\n *    是不是非常简单,当我们要在列表和卡片模式中切换时， 我们只需要 setState(showmode:'list'或者'card'),\n *    就可以在列表和卡片间来回切换了， 非常便利，再也不用什么缓存了，而且切换时也不需要加载什么模板.非常快捷。\n *\n *    那么renderList方法里面是怎么写的呢，也非常简单，我们再看一下state里面list的定义\n *    我们就可以根据list里面的定义写renderList了，state结构和render结构保持了一致\n *          list: {             列表模式的配置，包含查询区配置对象，表格区配置对象\n *             search:{         查询区配置\n *                  area: ''    查询区的区域编码,你在模板中定义的编码是什么他就是什么\n *                  onSearch:fn 点击查询时候的处理函数\n *             },\n *             table:{          表格区配置\n *                  area: ''    表格区的区域编码,你在模板中定义的编码是什么他就是什么\n *                  onSelect: fn 点击选中时候的处理函数\n *             }\n *          },\n *    renderList方法内部写法例子\n *           var renderList = () =>{ //渲染列表模式的是的页面，\n *              var {search, table } = this.state.list; //我们解构list里面的两个模型对象，就是search查询区的配置，table表格配置\n *                 return <div>\n *                  {this.props.search.NCCreateSearch(search.area, search)}\n *                   {this.props.table.createSimpleTable(table.area, table)}\n *                </div>\n *          }\n *    这样我们的列表界面就做完了，很简单 卡片模式也是和类似\n *    var renderCard = () =>{ //渲染卡片模式的是的页面，\n *           var { form } = this.card; //我们解构card里面的两个模型对象，就是search查询区的配置，table表格配置\n *          return <div>\n *                  {this.props.search.form(form.area, form)}\n *          </div>\n *    }\n *\n *    现在我们看一下完整的例子代码,并进行一些总结\n *    createState = () => {\n *      var state = {\n *          showmode: 'list',   showmode表示为当前的显示模式， 是列表模式，还是卡片模式， 他可以有两个值 list,card分表表示\n *          list: {             列表模式的配置，包含查询区配置对象，表格区配置对象\n *             search:{         查询区配置\n *                  area: ''    查询区的区域编码,你在模板中定义的编码是什么他就是什么\n *                  onSearch:fn 点击查询时候的处理函数\n *             },\n *             table:{          表格区配置\n *                  area: ''    表格区的区域编码,你在模板中定义的编码是什么他就是什么\n *                  onSelect: fn 点击选中时候的处理函数\n *             }\n *          },\n *          card:{              卡片模式的配置，包含了表单区的配置对象\n *              form:{          表单区\n *                  area:''     表单区的区域编码，你在模板中定义的编码是什么他就是什么\n *                  onBeforeEdit:fn  表单编辑前的处理函数\n *              }\n *          }\n *      }\n *    }\n *    render = () => {\n *          var renderList = () =>{\n *              var {search, table } = this.state.list; //我们解构list里面的两个模型对象，就是search查询区的配置，table表格配置\n *                 return <div>\n *                  {this.props.search.NCCreateSearch(search.area, search)}\n *                   {this.props.table.createSimpleTable(table.area, table)}\n *                </div>\n *          }\n *          var renderCard = () =>{\n *               var { form } = this.card; //我们解构card里面的两个模型对象，就是search查询区的配置，table表格配置\n *                return <div>\n *                  {this.props.search.form(form.area, form)}\n *                </div>\n *          }\n *          return this.state.showmode == 'list' ? renderList() : renderCard();\n *    }\n *    总结：\n *      代码state和render渲染的模型结构上是一致，这样我们能很快构建我们的页面，并非常容易修改，\n *      我们只需要修改我们的模型，就可以操控我们的页面了， 渲染只是在表现我们的模型\n ****************************************************************************************************/\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n// ============= 导入高阶组件区 =============\nimport { Utils } from './Utils';\nimport { createPage, base, ajax, high, toast, promptBox, deepClone, print, output } from 'nc-lightapp-front';\nimport ExcelOutput from 'uap/common/components/ExcelOutput';// 导出组件\nimport excelImportconfig from 'uap/common/components/excelImportconfig';// 导入配置方法\nimport NCUploader from 'uap/common/components/NCUploader';// 附件管理组件\nimport ApproveDetail from 'uap/common/components/ApproveDetail';//审批详情\nimport ApprovalTrans from 'uap/common/components/approvalTrans';//指派组件\nimport EntryConfigRef from 'hpf/refer/hpfrefs/HpfEntryConfigGridRef';//add by suqc\nconst EMPTY_FN = () => { }; // 空函数\nconst { PrintOutput, BillTrack } = high;//add by mzq\n// ============= 导入基础组件区 ==============\nconst { NCDiv, NCAffix, NCTabs, NCScrollElement, NCTooltip, NCToggleViewBtn } = base;\n\n// ============= 基本变量定义区 ==============\nconst URLS = { // 请求路径\n    addUrl: '/nccloud/hpf/drugclass/AddDrugclassVOAction.do', // 新增时请求默认值 Action\n    saveUrl: '/nccloud/hpf/drugclass/SaveDrugclassVOAction.do', // 保存 Action\n    listUrl: '/nccloud/hpf/drugclass/ListDrugclassVOAction.do', // 查询 Action\n    downUrl: '/nccloud/hpf/drugclass/DownloadDrugclassVOAction.do',//下载 Action  add by mzq\n};\n\nconst ACTIONS = { // 按钮编码\n    DOWNLOAD: 'Download',//下载 add by mzq\n    ADD: 'Add', // 新增\n    EDIT: 'Edit', // 修改\n    DELETE: 'Delete', // 删除\n    COPY: 'Copy', // 复制\n    SAVE: 'Save', // 保存\n    CANCEL: 'Cancel', // 取消\n    REFRESH: 'Refresh', // 刷新\n    MORE: \"More\" // 更多\n};\n\nconst FIELDS = { // 字段编码\n    PK_ORG: 'pk_org',\n    PRIMARYKEY: 'pk_drugclass'\n};\n\n// 编辑模式变量\nconst EDITMODE_EDIT = 'edit';\nconst EDITMODE_BROWSE = 'browse';\n\n\nclass ApplicationPage extends Component {\n    /**\n     * 构造方法：js要求的必须方法，构造整个页面对象\n     * 此方法构造时，会定义全局配置，this.config,方便其他方法取用\n     * 同时，也处理了加载模板，按钮，设置模板按钮功能，最终通过调用\n     * pageReady(此方法可以加入你的业务逻辑)完成第一次页面数据加载\n     * 此方法中，会调用initButton,initMeta 来初始化模板和按钮\n     * initButton,initMeta,pageReady 仅在页面打开时调用一次\n     * 其他时候不再调用\n     * @param {*} props\n     */\n    constructor(props) {\n        super(props);\n        /**\n         * 节点全局变量定义\n         * 包含页面编码、应用编码、标题、模块名等\n         */\n        this.config = {\n            domainName: 'hpf', // 模块域名\n            moduleName: 'hpf', // 模块编码\n            moduleId: 'M0Z10252', // 多语模块\n            title: props.getSearchParam('n') || '来源药品分类档案', // 单据标题\n            appcode: props.getSearchParam('c') || 'appcode未定义', // 应用编码\n            pagecode: props.getSearchParam('p') || 'pagecode未定义' // 页面编码\n        };\n        /**\n         * 创建state模型\n         * state中定义的数据模型跟render()方法中的组件一一对应\n         */\n        this.state = this.createState();\n        /**\n         * 适配版本变化：2105及其以后版本需要注册组件，之前版本不需要\n         */\n        this.props.use.search('DrugclassVOQuery');\n        this.props.use.editTable('DrugclassVOTable');\n        /**\n         * 加载NCC资源\n         * 1.包含单据模板、按钮等平台定义的资源\n         * 2.加载多语资源文件\n         * 3.加载需要在代码总用到参照js\n         */\n        Utils.loadNCCResource({\n            props,\n            ...this.config,\n            callback: (data) => {\n                let { context, template, button, lang, refer = {} } = data;\n                let meta = this.initMeta(template); // 修改后的模板\n                let buttons = this.initButton(button); // 修改后的按钮\n                //过滤按钮仅保留刷新和下载 add by mzq\n                buttons = buttons.length && buttons.filter(item => {\n                    if (['Download', 'Refresh'].indexOf(item.key) > -1) {\n                        return item;\n                    }\n                });\n                Promise.all([\n                    new Promise(resolve => this.props.meta.setMeta(meta, () => resolve(true))), // 设置模板\n                    new Promise(resolve => this.props.button.setButtons(buttons, () => resolve(true))), // 设置按钮\n                    new Promise(resolve => this.setState({ ...this.state, context }, () => resolve(true))) // 上下文维护到state\n                ]).then(() => {\n                    this.setState({ isPageReady: true }, () => {\n                        this.updateBtnStatus(); // 更新按钮状态\n                        this.pageReady(); // 页面信息加载完后加载表格数据\n                    });\n                }).catch((e) => {\n                    throw new ReferenceError(e);\n                });\n            }\n        });\n    }\n\n    /**\n     * pageReady方法为页面已经完全设置完毕\n     * 可以做一些初始的功能，比如：查询列表数据\n     */\n    pageReady = () => {\n        // // 查询区默认值赋值\n        let { context } = this.state;\n        // let searchCondition = [];\n        // // 查询区设置当前用户业务设置中的默认业务单元\n        if (context && context.pk_org) {\n            let { pk_org, org_Name } = context;\n        //     searchCondition.push({ field: FIELDS.PK_ORG, oprtype: '=', value: { firstvalue: pk_org }, display: org_Name });\n            this.setState({ pk_org });\n        }\n        // // 交易类型发布的小应用，查询区赋值默认交易类型\n        // if (context && context.paramMap && context.paramMap.pk_transtype) {\n        //     let { pk_transtype, transtype_name, transtype } = context.paramMap;\n        //     searchCondition.push({ field: FIELDS.TRANSTYPEPK, oprtype: '=', value: { firstvalue: pk_transtype }, display: transtype_name });\n        //     searchCondition.push({ field: FIELDS.TRANSTYPE, oprtype: '=', value: { firstvalue: transtype }, display: transtype });\n        //     this.props.search.setDisabledByField(this.state.search.area, FIELDS.TRANSTYPEPK, true); // 交易类型不可编辑\n        // }\n        // this.props.search.setSearchValue(this.state.search.area, searchCondition);\n        // 加载表格数据  -> 将数据设置到表格上  -> 更新按钮状态\n        this.loadList(data => this.fillList(data, this.updateBtnStatus));\n    };\n\n    /**\n     * 初始化平台定义的单据模板\n     * 触发时机：执行loadNCCResource,加载完模板、多语、等初始化信息之后触发\n     * 功能：对加载完的模板进行个性化调整\n     * 可实现举例功能:\n     * 1.参照表单联动过滤：参见[Demo1]\n     * 2.处理表格操作列：参见[Demo2]\n     * @param {*} meta\n     */\n    initMeta = (meta) => {\n        // 字段设置\n        meta[this.state.table.area].items.filter(item => {\n            // 隐藏 saga 相关的字段\n            if (item.attrcode.startsWith('saga')) {\n                item.visible = false;\n                item.disabled = true;\n            }\n        });\n        // 查询区主组织权限过滤：加载的是当前登录人有权限的组织\n        meta[this.state.search.area].items.find(item => {\n            if (item.attrcode == FIELDS.PK_ORG) {\n                item.queryCondition = () => ({ // 参照过滤条件\n                    AppCode: this.config.appcode,\n                    TreeRefActionExt: 'nccloud.web.refer.sqlbuilder.PrimaryOrgSQLBuilder' // 组织权限过滤自定义SqlBuilder类全名\n                });\n            }\n        });\n        // 表格区主组织权限过滤\n        meta[this.state.table.area].items.find(item => {\n            if (item.attrcode == FIELDS.PK_ORG) {\n                item.queryCondition = () => ({ // 参照过滤条件\n                    AppCode: this.config.appcode,\n                    TreeRefActionExt: 'nccloud.web.refer.sqlbuilder.PrimaryOrgSQLBuilder' // 组织权限过滤自定义SqlBuilder类全名\n                });\n            }\n        });\n\n        /**\n         * Demo：处理表格操作列\n         * 场景描述： 高阶组件simpleTable或者cardTable需要追加操作列\n         * 达成效果： simpleTable或者cardTable, 增加操作列，操作列中包含一些定义的按钮\n         * 写法解释： 见代码注释\n         * 代码示例:\n         */\n        let operation_column = { // 表格操作列\n            key: 'opr', // 操作列 key\n            attrcode: 'opr', // 操作列编码\n            label: '操作', // 操作列名称\n            visible: true,\n            width: 160,\n            fixed: 'right', // 固定到右侧\n            itemtype: 'customer',\n            render: (text, record, index) => {\n                let isBrowse = this.state.editmode == EDITMODE_BROWSE;\n                let btns = { // 表体行所有按钮\n                    [ACTIONS.DELETE]: true,\n                };\n                let btnKeys = Object.keys(btns).filter(key => btns[key]); // 过滤出显示的按钮\n                btnKeys = btnKeys.map(btn => btn + \"Opr\"); // 按钮编码追加\"Opr\"后缀\n                // 渲染操作列按钮\n                return this.props.button.createOprationButton(btnKeys,\n                    {\n                        area: 'table_inner', // 表体行按钮区域编码\n                        buttonLimit: 3,\n                        onButtonClick: (props, id) => this.onButtonClick(props, id, record, index) // 表体行按钮点击事件\n                    }\n                );\n            }\n        };\n        let tableid = this.state.table.area;\n        //meta[tableid].items.push(operation_column); // 操作列添加到表格中\n\n        return meta;\n    };\n\n    /**\n     * 初始化平台定义的按钮\n     * 功能：对加载完的按钮进行个性化调整\n     * @param button\n     */\n    initButton = (button) => {\n        /** 获取当前按钮下所有子按钮 */\n        let getChildBtns = (btn) => {\n            if (!btn) return [];\n            if (!btn.children || btn.children.length == 0) {\n                return [btn];\n            } else {\n                let btns = [btn];\n                btn.children.forEach(btn => btns = [...btns, ...getChildBtns(btn)]);\n                return btns;\n            }\n        };\n        /**\n         * 表头按钮和表体行按钮，只注册一份，区域编码为common\n         * 复制一份且区域编码改为table_inner，按钮编码追加\"Opr\"后缀，作为表体行按钮使用\n         */\n        let commonBtns = JSON.parse(JSON.stringify(button.filter(btn => btn.area == 'common')));\n        let tablebtns = [];\n        commonBtns.forEach(btn => tablebtns = [...tablebtns, ...getChildBtns(btn)]);\n        tablebtns.forEach(btn => {\n            btn.area = \"table_inner\"; // 区域编码\n            btn.key = btn.key + \"Opr\"; // 按钮编码 + \"Opr\"后缀\n        });\n        return [...button, ...tablebtns];\n    };\n\n    /**\n     * 创建state模型\n     * state的模型结构于页面结构是一致的，请优先阅读开头的说明 3.2 createState方法，render方法\n     * state中得必有并且常用得属性\n     * isPageReady: 页面是否可以进行渲染，构造函数会异步请求模板，所以构造函数执行完成后\n     *              React在构造函数执行完后会立即调用render方法渲染页面，此时可能模板还没有加载完成\n     *              所以通过此属来标记模板等初始化数据是否加载完成。加载完成后 isPageReady=true\n     *              才开始正式得渲染页面，参考render方法这种对isPageReady的使用。\n     * showmode：   页面当前的显示模型，SHOWMODE为前缀的常量定义，你的应用有几个页面的，就有几个SHOWMODE的常量定义\n     *              分别对应不同页面，比如：主从页面中(不带插件) 有列表和卡片两个页面，则会使用到SHOWMODE_LIST\n     *              SHOWMODE_CARD, render方法的中根据showmode值，来具体渲染页面。\n     * editmode:    页面当前编辑模式，有两种状态，EDITMODE为前传的常量定义EDITMODE_BROWSE,EDITMODE_EDIT;\n     *              高阶组件的中的编辑状态与它保持一致的。当设置或改变editmode时高阶组件的状态也要随之变化如 form formlist\n     * 模型结构定义说明：建议优先阅读开头的说明3.2 createState方法，render方法\n     */\n    createState = () => {\n        let state = {\n            isPageReady: false, // 页面信息（模板、按钮）是否加载完\n            context: undefined, // 上下文\n            editmode: EDITMODE_BROWSE, // 页面状态，默认浏览态\n\n            //add by mzq\n            pk_org: '',\n            dbinfo: {},\n\n            head: { // 表头区域\n                initShowBackBtn: false, // 是否显示返回按钮\n                title: this.config.title, // 单据标题\n            },\n            headBtn: { // 表头按钮区域\n                area: 'common', // 按钮区域编码\n                buttonLimit: 3,\n                onButtonClick: this.onButtonClick // 按钮点击事件\n            },\n            search: { // 查询区\n                area: 'DrugclassVOQuery', // 查询区域编码\n                showSearchBtn: false,\n                showClearBtn: false,\n                showAdvBtn: false,\n                showAdvSearchPlanBtn: false,\n                showAdvSearchPlanBtn: false, //add by mzq\n                clickSearchBtn: () => { // 查询按钮事件\n                    this.loadList(data => { // 加载表格数据\n                        let tableid = this.state.table.area;\n                        this.fillList(data, this.updateBtnStatus); // 设置表格数据并更新按钮状态\n                        let length = data && data[tableid] && data[tableid].allpks && data[tableid].allpks.length || 0; // 查到单据个数\n                        toast({ // 点击查询按钮提示语\n                            color: length > 0 ? 'success' : 'warning',\n                            content: length > 0 ? ('查询成功，共' + length + '条') : '未查询到符合条件的数据'\n                        });\n                    });\n                },\n                //add by mzq\n                onAfterEvent: this.onSearchAfterEvent,\n            },\n            table: { // 表格区域\n                area: 'DrugclassVOTable', // 表格区域编码\n                useFixedHeader: true,\n                adaptionHeight: true, // 自动托底\n                showIndex: true, // 显示序号\n                showCheck: true, // 显示复选框\n                showPagination: true, // 显示分页器onsearch\n                onSelected: this.onSelected, // 选中行事件\n                onSelectedAll: this.onSelectedAll, // 选中所有行事件\n                onBeforeEvent: this.onBeforeEvent, // 编辑前事件\n                onAfterEvent: this.onAfterEvent, // 编辑后事件\n                handlePageInfoChange: () => { // 页器操作的回调函数\n                    // 加载表格数据  -> 将数据设置到表格上  -> 更新按钮状态\n                    this.loadList(data => this.fillList(data, this.updateBtnStatus));\n                }\n            }\n        };\n        return state;\n    };\n    //add by mzq\n    onSearchAfterEvent = () => {\n        let searcharea = this.state.search.area;\n        let data = this.props.search.getAllSearchData(searcharea);\n        if (data && data.conditions.length != 0) {\n            let pk_org = this.props.search.getSearchValByField(searcharea, 'pk_org');\n            if (pk_org && pk_org.value && pk_org.value.firstvalue) {\n                let value = pk_org.value.firstvalue;\n                this.setState({ dbinfo: null, pk_org: value });\n            }\n            if (this.props.editTable.getStatus() && this.props.editTable.getStatus() == 'edit') {\n                promptBox({\n                    color: \"warning\",\n                    title: this.state.json['M0Z10201-000011'],/* 国际化处理： 提示*/\n                    content: this.state.json['M0Z10201-000015']/* 国际化处理： 编辑态不能查询*/\n                });\n            }\n            this.loadList(data => {\n                let tableid = this.state.table.area;\n                this.fillList(data, this.updateBtnStatus);\n                let length = data && data[tableid] && data[tableid].allpks && data[tableid].allpks.length || 0; // 查到单据个数\n                toast({ // 点击查询按钮提示语\n                    color: length > 0 ? 'success' : 'warning',\n                    content: length > 0 ? ('查询成功，共' + length + '条。') : '未查询到符合条件的数据'\n                });\n            });\n        } else {\n            this.setState({ pk_org: '' });\n            this.props.editTable.setTableData(this.state.table.area, { rows: [] }, false);\n        }\n    };\n    /** 渲染方法 */\n    render() {\n        if (!this.state.isPageReady) {\n            return ''; // 页面信息未加载完不渲染页面\n        }\n        /** 渲染单表应用页面 */\n        let renderList = () => {\n            let { showmode, editmode, head, headBtn, search, table } = this.state;\n            let { createModal } = this.props.modal;\n            return (\n                <div className=\"nc-single-table\">\n                    <NCDiv className=\"nc-singleTable-header-area\" areaCode={NCDiv.config.HEADER}>\n                        {/* 表格头部 */}\n                        <div className=\"header-title-search-area\">\n                            {this.props.BillHeadInfo.createBillHeadInfo({ ...head })}\n                        </div>\n                        {/* 按钮区 */}\n                        <div className=\"header-button-area\">\n                            {this.props.button.createButtonApp({ ...headBtn })}\n                        </div>\n                    </NCDiv>\n                    {/* 浏览态显示查询区 */}\n                    {editmode == EDITMODE_BROWSE && <div className=\"nc-singleTable-search-area\">\n                        {this.props.search.NCCreateSearch(search.area, { ...search })}\n                    </div>}\n                    <div className='nc-singleTable-table-area'> {/* 列表区 */}\n                        {this.props.editTable.createEditTable(table.area, { ...table })}\n                    </div>\n\n                    {\n                        //add by mzq\n                        createModal('selds', {\n                            title: '选择来源系统',\n                            className: 'selds',\n                            content: <EntryConfigRef value={this.state.dbinfo}\n                                isMultiSelectedEnabled={false}\n                                queryCondition={v => ({ pk_org: this.state.pk_org })}\n                                onChange={(v) => this.setState({ dbinfo: v })} />,\n                            beSureBtnClick: this.beSureBtnClick,\n                            cancelBtnClick: this.cancelBtnClick,\n                            size: 'sm'\n                        })\n                    }\n                </div>\n            );\n        };\n\n\n        return (\n            <div>\n                {renderList()}\n            </div>\n        );\n    }\n    //add by mzq\n    beSureBtnClick = () => {\n        let dbinfo = this.state.dbinfo;\n        if (Object.keys(dbinfo).length == 0) {\n            toast({ color: 'warning', title: \"来源系统不能为空!\" });/* 国际化处理： 下载成功*/\n            return;\n        }\n\n        ajax({\n            url: URLS.downUrl,\n            data: {\n                ref1: this.state.dbinfo,\n            },\n            async: false,\n            success: (res) => {\n                let { success, data } = res;\n                //填充数据\n                if (success) {\n                    toast({ color: 'success', title: data });/* 国际化处理： 下载成功*/\n                } else {\n                    toast({ color: 'success', title: \"下载失败\" });\n                }\n                this.props.modal.close('selds');\n            }\n        });\n        this.loadList(data => this.fillList(data, this.updateBtnStatus)); // 重新加载数据\n    };\n\n    cancelBtnClick = () => {\n        this.setState({ pk_entryconfig: '' });\n    };\n\n    // ============= 功能性方法区 =============\n    // 职责单一的方法写在这里。多个功能方法可以组装成流程方法，实现某种业务操作。\n    // 如：流程方法【查询表格数据】由【加载表格数据】【填充表格数据】等两个职责单一的方法组装而成。\n    // 职责单一的目的：1.更好的复用代码。 2.避免改 BUG 修改代码影响其他业务逻辑，改出其他的 BUG。\n\n    /**\n     * 设置页面状态\n     * 1. state 中维护当前页面状态  2.设置表格状态\n     */\n    setPageStatus = (editmode = EDITMODE_BROWSE, callback = EMPTY_FN) => {\n        let tableid = this.state.table.area;\n        this.setState({ editmode }, () => this.props.editTable.setStatus(tableid, editmode, callback));\n    };\n\n    /**\n     * 按钮状态控制\n     */\n    updateBtnStatus = () => {\n        let isEdit = this.state.editmode == EDITMODE_EDIT; // 编辑态\n        let isBrowse = this.state.editmode == EDITMODE_BROWSE; // 浏览态\n\n        // 按钮显隐性控制\n        this.props.button.setButtonsVisible({\n\n\n            [ACTIONS.EDIT]: isBrowse,\n\n            [ACTIONS.SAVE]: isEdit,\n            [ACTIONS.CANCEL]: isEdit,\n            [ACTIONS.REFRESH]: isBrowse,\n            [ACTIONS.MORE]: isBrowse,\n        });\n\n        let tableid = this.state.table.area;\n        let rows = this.props.editTable.getCheckedRows(tableid); // 选中行\n        let selectedCount = rows ? rows.length : 0; // 选中单据个数\n\n        // 按钮禁用控制\n        this.props.button.setDisabled({\n            [ACTIONS.COPY]: selectedCount == 0,\n            [ACTIONS.DELETE]: selectedCount == 0,\n        });\n\n        // 主按钮设置\n        this.props.button.setMainButton(ACTIONS.ADD, isBrowse);\n        this.props.button.setMainButton(ACTIONS.SAVE, isEdit);\n\n        // 表格行内按钮提示语设置\n        let content = isBrowse ? '确定要删除？' : '';\n        this.props.button.setPopContent(ACTIONS.DELETE + \"Opr\", content);\n    };\n\n    /**\n     * 加载表格数据\n     * @param callback 回调函数\n     */\n    loadList = (callback = EMPTY_FN) => {\n        let { search, table } = this.state;\n        let queryInfo = this.props.search.getQueryInfo(search.area, false); // 查询条件\n        let pageInfo = this.props.editTable.getTablePageInfo(table.area); // 页面分页信息\n        if (!queryInfo.querycondition || queryInfo.querycondition.conditions.length == 0) {\n            callback(undefined);\n            return;\n        }\n        ajax({\n            url: URLS.listUrl,\n            data: {\n                appcode: this.config.appcode,\n                pageCode: this.config.pagecode,\n                formId: table.area,\n                queryTreeFormatVO: { ...queryInfo, pageCode: this.config.pagecode },\n                pageInfo\n            },\n            success: res => callback(res.data && res.data.data)\n        });\n    };\n\n    /**\n     * 设置表格数据\n     * @param data 表格数据\n     * @param callback 回调函数\n     */\n    fillList = (data, callback = EMPTY_FN) => {\n        let tableid = this.state.table.area;\n        let tableData = (data && data[tableid]) ? data[tableid] : { rows: [] }; // 表格数据\n        this.props.editTable.setTableData(tableid, tableData); // 设置表格数据\n        callback(); // 执行回调函数\n    };\n\n    /**\n     * 加载新增行默认值，包括：\n     * 1.新增行默认值\n     * 2.编码规则配置\n     * @param callback 回调函数\n     */\n    add = (callback = EMPTY_FN) => {\n        let rows = [{ values: {} }];\n        let params = this.buildSaveParam(rows);\n        ajax({\n            url: URLS.addUrl,\n            data: params,\n            success: res => callback(res.data)\n        });\n    };\n\n    /**\n     * 保存数据\n     * 单表的保存和删除都调保存Action，公用此方法\n     * @param data 保存参数\n     * @param callback 保存后回调函数\n     */\n    save = (data, callback = EMPTY_FN) => {\n        ajax({\n            url: URLS.saveUrl,\n            data,\n            success: res => callback(res.data && res.data.data)\n        });\n    };\n\n    /**\n     * 功能介绍：构建保存参数\n     * 工具生成的代码，所有节点保存参数统一按照一主多子的结构处理。单表的数据也要封装成一主多子的结构。\n     * @param rows 所有行数据\n     */\n    buildSaveParam = (rows = []) => {\n        let tableid = this.state.table.area;\n        let params = {\n            formId: tableid,\n            pageCode: this.config.pagecode,\n            billCard: {\n                pageid: this.config.pagecode,\n                bodys: { [tableid]: { areaType: \"table\", areacode: tableid, pageinfo: null, rows } }\n            }\n        };\n        return params;\n    };\n\n\n    // =============操作流程方法区=============\n    /**\n     * 按钮事件\n     * @param props 当前组件props\n     * @param btncode 当前点击按钮编码\n     * @param record 当前行数据（如果点击的是表格行按钮）\n     * @param index 当前行下标（如果点击的是表格行按钮）\n     */\n    onButtonClick = (props, btncode, record, index) => {\n        switch (btncode) {\n            case ACTIONS.ADD: // 新增\n                this.onAdd();\n                break;\n            case ACTIONS.EDIT: // 编辑\n                this.onEdit();\n                break;\n            case ACTIONS.DELETE: // 删除\n                this.onDelete();\n                break;\n            case ACTIONS.DELETE + \"Opr\": // 行删除\n                this.onRowDelete(record, index);\n                break;\n            case ACTIONS.COPY: // 复制\n                this.onCopy();\n                break;\n            case ACTIONS.SAVE: // 保存\n                this.onSave();\n                break;\n            case ACTIONS.CANCEL: // 取消\n                this.onCancel();\n                break;\n            case ACTIONS.REFRESH: // 刷新\n                this.onRefresh();\n                break;\n            case ACTIONS.DOWNLOAD: //下载 add by mzq\n                this.onDownload();\n                break;\n            default:\n                break;\n        }\n    };\n\n    /**\n     * 新增按钮点击事件\n     */\n    onAdd = () => {\n        let { context, table } = this.state;\n        let tableid = table.area;\n        this.add(data => { // 加载新增行默认值，传到回调函数的参数data中\n            this.setPageStatus(EDITMODE_EDIT, () => { // 设置页面状态\n                // 后台返回的默认值\n                let defValue = data.data && data.data.head[tableid].rows.length > 0\n                    && data.data.head[tableid].rows[0].values || {};\n                // 过滤掉空属性\n                Object.getOwnPropertyNames(defValue).forEach(key => {\n                    !defValue[key].value && delete defValue[key];\n                });\n                // 设置当前用户业务中的默认业务单元\n                if (context && context.pk_org) {\n                    Object.assign(defValue, {\n                        [FIELDS.PK_ORG]: { value: context.pk_org, display: context.org_Name },\n                    });\n                }\n                let num = this.props.editTable.getNumberOfRows(tableid); // 表格当前行数\n                this.props.editTable.addRow(tableid, num, true, defValue); // 新增一行\n                this.updateBtnStatus(); // 更新按钮状态\n            });\n        });\n    };\n\n    /**\n     * 修改按钮点击事件\n     * 功能描述：页面状态设置为编辑态，并更新按钮状态\n     */\n    onEdit = () => {\n        this.setPageStatus(EDITMODE_EDIT, this.updateBtnStatus);\n    };\n\n    /**\n     * 删除按钮点击事件\n     */\n    onDelete = () => {\n        let tableid = this.state.table.area;\n        let selectedData = this.props.editTable.getCheckedRows(tableid); // 选中数据\n        if (selectedData.length == 0) {\n            return;\n        }\n        // 编辑态-删除：只是从页面上移除数据，保存时再调后台接口去删除\n        if (this.state.editmode == EDITMODE_EDIT) {\n            let indexArray = selectedData.map(d => d.index);\n            this.props.editTable.deleteTableRowsByIndex(tableid, indexArray); // 根据下标index删除表格行\n            this.updateBtnStatus(); // 更新按钮状态\n            return;\n        }\n        let rows = selectedData.map((row) => // 封装删除行数据\n        ({\n            rowId: row.data.rowId,\n            status: '3',\n            values: {\n                ts: { value: row.data.values.ts.value },\n                [FIELDS.PRIMARYKEY]: { value: row.data.values[FIELDS.PRIMARYKEY].value }\n            }\n        })\n        );\n        // 删除单据\n        let deleteBill = () => {\n            let deleteParams = this.buildSaveParam(rows);\n            this.save(deleteParams, (res) => {\n                toast({ color: 'success', content: '删除成功' });\n                this.loadList(data => this.fillList(data, this.updateBtnStatus)); // 重新加载数据\n            });\n        };\n        promptBox({\n            color: 'warning',\n            title: '删除',\n            content: '确定要删除吗？',\n            noFooter: false,\n            noCancelBtn: false,\n            beSureBtnName: '确定',\n            cancelBtnName: '取消',\n            beSureBtnClick: deleteBill\n        });\n    };\n\n    /**\n     * 表体行删除\n     * @param record 当前删除行数据\n     * @param index 当前删除行下标\n     */\n    onRowDelete = (record, index) => {\n        let tableid = this.state.table.area;\n        if (this.state.editmode == EDITMODE_EDIT) { // 编辑态删除\n            this.props.editTable.deleteTableRowsByIndex(tableid, index); // 根据下标index删除表格行\n            return;\n        }\n        let row = { // 删除行数据\n            rowId: index,\n            status: '3',\n            values: {\n                ts: { value: record.values.ts.value },\n                [FIELDS.PRIMARYKEY]: { value: record.values[FIELDS.PRIMARYKEY].value }\n            }\n        };\n        let deleteParams = this.buildSaveParam([row]);\n        this.save(deleteParams, (res) => {\n            toast({ color: 'success', content: '删除成功' }); // 删除提示语\n            this.loadList(data => this.fillList(data, this.updateBtnStatus)); // 重新加载数据\n        });\n    };\n\n    /**\n     * 复制\n     */\n    onCopy = () => {\n        let tableid = this.state.table.area;\n        let selectedRows = this.props.editTable.getCheckedRows(tableid);\n        if (!selectedRows || selectedRows.length == 0) {\n            return;\n        }\n        this.setPageStatus(EDITMODE_EDIT, () => {\n            // 获取复制数据\n            let copyRows = selectedRows.map(row => {\n                // 清空基本信息\n                row.data.values[FIELDS.PRIMARYKEY] = {}; // 主键\n                row.data.values.code = {}; // 单据号\n                row.data.values.name = {}; // 名称\n                return {\n                    status: 2,\n                    isOptimized: row.data.isOptimized,\n                    values: row.data.values\n                };\n            });\n            // 获取表格原来数据，将复制行追加到表格最后\n            let rows = this.props.editTable.getAllRows(tableid);\n            rows = [...rows, ...copyRows];\n            // 重新设置表格数据\n            this.props.editTable.setTableData(tableid, { rows });\n            this.updateBtnStatus();\n        });\n    };\n\n\n    /**\n     * 保存按钮点击事件\n     */\n    onSave = () => {\n        let tableid = this.state.table.area;\n        // 无变动的行数据则直接返回浏览态\n        let changedRows = this.props.editTable.getChangedRows(tableid);\n        if (!changedRows || changedRows.length == 0) {\n            this.setPageStatus(EDITMODE_BROWSE, () => {\n                this.loadList((data) => this.fillList(data, this.updateBtnStatus)); // 重新加载数据\n            });\n            return;\n        }\n        // 必输项校验\n        let allRows = this.props.editTable.getAllRows(tableid, true);\n        if (!this.props.editTable.checkRequired(tableid, allRows)) {\n            return;\n        }\n        // 保存单据\n        let saveParams = this.buildSaveParam(allRows);\n        let saveBill = () => {\n            this.save(saveParams, (res) => {\n                toast({ color: 'success', content: '保存成功' });\n                this.setPageStatus(EDITMODE_BROWSE, () => {\n                    this.loadList(data => this.fillList(data, this.updateBtnStatus)); // 重新加载数据\n                });\n            });\n        };\n        let validateData = { // 验证公式参数\n            pageid: saveParams.billCard.pageid,\n            model: saveParams.billCard.bodys[tableid]\n        };\n        this.props.validateToSave(validateData, saveBill, { [tableid]: 'table' }, 'grid'); // 执行公式并保存\n    };\n\n    /**\n     * 取消\n     */\n    onCancel = () => {\n        promptBox({ // 取消操作提示框\n            color: 'warning',\n            title: '取消',\n            content: '确定要取消吗？',\n            noFooter: false,\n            noCancelBtn: false,\n            beSureBtnName: '确定',\n            cancelBtnName: '取消',\n            beSureBtnClick: () => {\n                this.setPageStatus(EDITMODE_BROWSE, () => { // 设置页面状态\n                    this.loadList(data => this.fillList(data, this.updateBtnStatus)); // 重新加载数据\n                });\n            }\n        });\n    };\n\n    /**\n     * 刷新\n     */\n    onRefresh = () => {\n        this.loadList(data => this.fillList(data, this.updateBtnStatus)); // 重新加载数据\n        toast({ color: 'success', content: '刷新成功' });\n    };\n\n    /**\n    *  下载 add by mzq\n    */\n    onDownload = () => {\n        this.props.modal.show('selds');\n    };\n\n\n    /**\n     * 选中行事件\n     */\n    onSelected = () => {\n        this.updateBtnStatus(); // 选中行后重新设置按钮状态\n    };\n\n    /**\n     * 选中所有行事件\n     */\n    onSelectedAll = () => {\n        this.updateBtnStatus(); // 选中所有行后重新设置按钮状态\n    };\n\n    /**\n     * 编辑前事件\n     * @param props\n     * @param moduleId 区域id\n     * @param item 模版当前列的项\n     * @param index 当前行index\n     * @param value 当前值\n     * @param record 行数据\n     */\n    onBeforeEvent = (props, moduleId, item, index, value, record) =>\n        // 编辑前事件使用案例: 参照过滤。如：交易类型要根据单据类型编码过滤\n        // if (item.attrcode == FIELDS.TRANSTYPEPK) { // 交易类型PK\n        //     let meta = props.meta.getMeta();\n        //     meta[this.state.table.area].items.forEach(item => {\n        //         if (item.attrcode == FIELDS.TRANSTYPEPK) {\n        //             item.queryCondition = () => {\n        //                 return { parentbilltype: BILLTYPE }\n        //             }\n        //         }\n        //     });\n        //     this.props.meta.setMeta(meta);\n        //     return true;\n        // }\n        true\n        ;\n\n    /**\n     * 编辑后事件\n     * @param props\n     * @param moduleId 区域id\n     * @param key 操作字段的编码\n     * @param value 当前值\n     * @param changedrows 新旧值集合\n     * @param index 当前行index\n     * @param record 行数据\n     */\n    onAfterEvent = (props, moduleId, key, value, changedrows, index, record) => {\n        switch (key) {\n            // 编辑后事件使用案例\n            case '编辑字段编码':\n                // 业务代码\n                break;\n            default:\n                break;\n        }\n    };\n\n}\n\n/**\n * 应用的入口createPage\n * 前端底层，通过createPage方法，把各个对象插入到当前应用的props中\n * initTemplate：目的是初始化模板，目前已经在constructor中使用Utils.loadNCCResource方法获取模板\n * billInfo：目的是为公式准备，具体可以到nccdev.yonyou.com上搜索公式查看\n */\nApplicationPage = createPage({\n    initTemplate: {},\n    billinfo: { billtype: 'grid', pagecode: 'M0Z10252_DrugclassVO', bodycode: 'DrugclassVOTable' },\n    mutiLangCode: 'M0Z10252'\n})(ApplicationPage);\nReactDOM.render(<ApplicationPage />, document.querySelector(\"#app\"));\n"],"names":["toast","EMPTY_FN","apply","arguments","ReferenceError","length","target","sources","slice","i","param","Object","keys","forEach","key","prototype","hasOwnProperty","call","loadTemplate","props","pagecode","appcode","cfg","Promise","resolve","createUIDom","data","loadLang","moduleId","domainName","MultiInit","getMultiLang","callback","success","inlt","content","color","lang","loadRefer","urls","result","loads","filter","refObj","index","url","jsname","includes","substring","window","map","reject","name","script","document","createElement","suffix","src","type","onload","default","onerror","undefined","body","appendChild","all","loadNCCResource","config","referObjs","then","res","isArray","toString","isString","isObject","transferDataWapper","datas","grandsonMap","head","bodys","onTransferItemSelectedWrapper","func","fetchDataUnWapper","record","isComplete","curActiveIndex","status","onTransferWrapper","fetchList","ncTabs","tabPanes","tables","tabPane","transferTable","headIdName","bodyIdName","headTableId","bodyTableId","billType","headPkField","bodyPkField","getTransferTableSelectedValue","records","table","transData","pk","value","rows","values","ts","children","row","FloatAdd","arg1","arg2","r1","r2","m","s1","s2","split","e","Math","pow","max","FloatMultiple","f1","f2","Number","replace","Utils","React","Component","ReactDOM","createPage","base","ajax","high","promptBox","deepClone","print","output","ExcelOutput","excelImportconfig","NCUploader","ApproveDetail","ApprovalTrans","EntryConfigRef","PrintOutput","BillTrack","NCDiv","NCAffix","NCTabs","NCScrollElement","NCTooltip","NCToggleViewBtn","URLS","addUrl","saveUrl","listUrl","downUrl","ACTIONS","DOWNLOAD","ADD","EDIT","DELETE","COPY","SAVE","CANCEL","REFRESH","MORE","FIELDS","PK_ORG","PRIMARYKEY","EDITMODE_EDIT","EDITMODE_BROWSE","ApplicationPage","render","state","isPageReady","renderList","showmode","editmode","headBtn","search","createModal","modal","div","className","areaCode","HEADER","BillHeadInfo","createBillHeadInfo","button","createButtonApp","NCCreateSearch","area","editTable","createEditTable","title","dbinfo","isMultiSelectedEnabled","queryCondition","v","pk_org","onChange","setState","beSureBtnClick","cancelBtnClick","size","constructor","pageReady","context","org_Name","loadList","fillList","updateBtnStatus","initMeta","meta","items","item","attrcode","startsWith","visible","disabled","find","AppCode","TreeRefActionExt","operation_column","label","width","fixed","itemtype","text","isBrowse","btns","btnKeys","btn","createOprationButton","buttonLimit","onButtonClick","id","tableid","initButton","getChildBtns","commonBtns","JSON","parse","stringify","tablebtns","createState","initShowBackBtn","showSearchBtn","showClearBtn","showAdvBtn","showAdvSearchPlanBtn","clickSearchBtn","allpks","onAfterEvent","onSearchAfterEvent","useFixedHeader","adaptionHeight","showIndex","showCheck","showPagination","onSelected","onSelectedAll","onBeforeEvent","handlePageInfoChange","searcharea","getAllSearchData","conditions","getSearchValByField","firstvalue","getStatus","json","setTableData","ref1","async","close","pk_entryconfig","setPageStatus","setStatus","isEdit","setButtonsVisible","getCheckedRows","selectedCount","setDisabled","setMainButton","setPopContent","queryInfo","getQueryInfo","pageInfo","getTablePageInfo","querycondition","pageCode","formId","queryTreeFormatVO","tableData","add","params","buildSaveParam","save","billCard","pageid","areaType","areacode","pageinfo","btncode","onAdd","onEdit","onDelete","onRowDelete","onCopy","onSave","onCancel","onRefresh","onDownload","defValue","getOwnPropertyNames","assign","display","num","getNumberOfRows","addRow","selectedData","indexArray","d","deleteTableRowsByIndex","rowId","deleteBill","deleteParams","noFooter","noCancelBtn","beSureBtnName","cancelBtnName","selectedRows","copyRows","code","isOptimized","getAllRows","changedRows","getChangedRows","allRows","checkRequired","saveParams","saveBill","validateData","model","validateToSave","show","changedrows","moduleName","getSearchParam","use","template","refer","buttons","indexOf","setMeta","setButtons","catch","initTemplate","billinfo","billtype","bodycode","mutiLangCode","querySelector"],"sourceRoot":""}